ARM GAS  /tmp/ccso4YHK.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"i2c_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.I2C0_EventIRQ_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	I2C0_EventIRQ_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	I2C0_EventIRQ_Handler:
  25              	.LFB56:
  26              		.file 1 "Src/i2c_it.c"
   1:Src/i2c_it.c  **** /**
   2:Src/i2c_it.c  ****   * This file is part of the hoverboard-sideboard-hack project.
   3:Src/i2c_it.c  ****   *
   4:Src/i2c_it.c  ****   * Copyright (C) 2020-2021 Emanuel FERU <aerdronix@gmail.com>
   5:Src/i2c_it.c  ****   *
   6:Src/i2c_it.c  ****   * This program is free software: you can redistribute it and/or modify
   7:Src/i2c_it.c  ****   * it under the terms of the GNU General Public License as published by
   8:Src/i2c_it.c  ****   * the Free Software Foundation, either version 3 of the License, or
   9:Src/i2c_it.c  ****   * (at your option) any later version.
  10:Src/i2c_it.c  ****   *
  11:Src/i2c_it.c  ****   * This program is distributed in the hope that it will be useful,
  12:Src/i2c_it.c  ****   * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:Src/i2c_it.c  ****   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:Src/i2c_it.c  ****   * GNU General Public License for more details.
  15:Src/i2c_it.c  ****   *
  16:Src/i2c_it.c  ****   * You should have received a copy of the GNU General Public License
  17:Src/i2c_it.c  ****   * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:Src/i2c_it.c  **** */
  19:Src/i2c_it.c  **** 
  20:Src/i2c_it.c  **** 
  21:Src/i2c_it.c  **** #include "gd32f1x0_i2c.h"
  22:Src/i2c_it.c  **** #include "i2c_it.h"
  23:Src/i2c_it.c  **** #include "systick.h"
  24:Src/i2c_it.c  **** #include "config.h"
  25:Src/i2c_it.c  **** #include "defines.h"
  26:Src/i2c_it.c  **** 
  27:Src/i2c_it.c  **** extern volatile int8_t    i2c_status;
  28:Src/i2c_it.c  **** extern volatile i2c_cmd   i2c_ReadWriteCmd;
  29:Src/i2c_it.c  **** extern volatile uint8_t   i2c_slaveAddress;
  30:Src/i2c_it.c  **** extern volatile uint8_t   i2c_regAddress;
  31:Src/i2c_it.c  **** extern volatile uint8_t*  i2c_txbuffer;
  32:Src/i2c_it.c  **** extern volatile uint8_t*  i2c_rxbuffer;
ARM GAS  /tmp/ccso4YHK.s 			page 2


  33:Src/i2c_it.c  **** extern volatile uint8_t   i2c_nDABytes;
  34:Src/i2c_it.c  **** extern volatile  int8_t   i2c_nRABytes;
  35:Src/i2c_it.c  **** 
  36:Src/i2c_it.c  **** #ifdef AUX45_USE_I2C
  37:Src/i2c_it.c  **** extern volatile int8_t    i2c_aux_status;
  38:Src/i2c_it.c  **** extern volatile i2c_cmd   i2c_aux_ReadWriteCmd;
  39:Src/i2c_it.c  **** extern volatile uint8_t   i2c_aux_slaveAddress;
  40:Src/i2c_it.c  **** extern volatile uint8_t   i2c_aux_regAddress;
  41:Src/i2c_it.c  **** extern volatile uint8_t*  i2c_aux_txbuffer;
  42:Src/i2c_it.c  **** extern volatile uint8_t*  i2c_aux_rxbuffer;
  43:Src/i2c_it.c  **** extern volatile uint8_t   i2c_aux_nDABytes;
  44:Src/i2c_it.c  **** extern volatile  int8_t   i2c_aux_nRABytes;
  45:Src/i2c_it.c  **** #endif
  46:Src/i2c_it.c  **** 
  47:Src/i2c_it.c  **** 
  48:Src/i2c_it.c  **** void I2C0_EventIRQ_Handler(void)
  49:Src/i2c_it.c  **** {
  27              		.loc 1 49 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  50:Src/i2c_it.c  ****     uint16_t k;
  31              		.loc 1 50 5 view .LVU1
  51:Src/i2c_it.c  ****     if (i2c_ReadWriteCmd == WRITE) {        // check for WRITE command
  32              		.loc 1 51 5 view .LVU2
  49:Src/i2c_it.c  ****     uint16_t k;
  33              		.loc 1 49 1 is_stmt 0 view .LVU3
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 51 26 view .LVU4
  42 0002 644B     		ldr	r3, .L42
  43 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  44              		.loc 1 51 8 view .LVU5
  45 0006 012A     		cmp	r2, #1
  46              		.loc 1 51 26 view .LVU6
  47 0008 D1B2     		uxtb	r1, r2
  48              		.loc 1 51 8 view .LVU7
  49 000a 53D1     		bne	.L2
  52:Src/i2c_it.c  **** 
  53:Src/i2c_it.c  ****         // ======================================== WRITE ========================================
  54:Src/i2c_it.c  ****         // --------------------------------------------------------------------
  55:Src/i2c_it.c  ****         // | Master | S | AD+W |     | RA |     | DATA |     | DATA |     | P |
  56:Src/i2c_it.c  ****         // | Slave  |   |      | ACK |    | ACK |      | ACK |      | ACK |   |
  57:Src/i2c_it.c  ****         // --------------------------------------------------------------------
  58:Src/i2c_it.c  **** 
  59:Src/i2c_it.c  ****         if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_SBSEND)) {                            // chec
  50              		.loc 1 59 9 is_stmt 1 view .LVU8
  51              		.loc 1 59 13 is_stmt 0 view .LVU9
  52 000c 6248     		ldr	r0, .L42+4
  53 000e FFF7FEFF 		bl	i2c_interrupt_flag_get
  54              	.LVL0:
  55              		.loc 1 59 12 view .LVU10
ARM GAS  /tmp/ccso4YHK.s 			page 3


  56 0012 40B1     		cbz	r0, .L3
  57              	.L37:
  60:Src/i2c_it.c  **** 
  61:Src/i2c_it.c  ****             i2c_master_addressing(I2C0, i2c_slaveAddress, I2C_TRANSMITTER);                 // send
  62:Src/i2c_it.c  **** 
  63:Src/i2c_it.c  ****         } else if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_ADDSEND)) {                    // chec
  64:Src/i2c_it.c  **** 
  65:Src/i2c_it.c  ****             i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_ADDSEND);                           // clea
  66:Src/i2c_it.c  **** 
  67:Src/i2c_it.c  ****         } else if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_TBE)) {                        // chec
  68:Src/i2c_it.c  **** 
  69:Src/i2c_it.c  ****             if (i2c_nRABytes > 0) {                                                         // chec
  70:Src/i2c_it.c  ****                 i2c_data_transmit(I2C0, i2c_regAddress);                                    // the 
  71:Src/i2c_it.c  ****                 i2c_nRABytes--;
  72:Src/i2c_it.c  ****             } else {
  73:Src/i2c_it.c  ****                 if (i2c_nDABytes > 0) {
  74:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, *i2c_txbuffer++);                               // the 
  75:Src/i2c_it.c  ****                     i2c_nDABytes--;
  76:Src/i2c_it.c  ****                     if (0 == i2c_nDABytes) {
  77:Src/i2c_it.c  ****                         i2c_status = 0;                                                     // 0 = 
  78:Src/i2c_it.c  ****                     }
  79:Src/i2c_it.c  ****                     for(k=0; k<500; k++) {
  80:Src/i2c_it.c  ****                         #ifdef __GNUC__
  81:Src/i2c_it.c  ****                             asm volatile ("nop");                                           // unop
  82:Src/i2c_it.c  ****                         #else
  83:Src/i2c_it.c  ****                             __asm volatile ("nop");
  84:Src/i2c_it.c  ****                         #endif
  85:Src/i2c_it.c  ****                     }
  86:Src/i2c_it.c  ****                 } else {
  87:Src/i2c_it.c  ****                     i2c_stop_on_bus(I2C0);                                                  // the 
  88:Src/i2c_it.c  ****                     i2c_interrupt_disable(I2C0, I2C_INT_ERR | I2C_INT_BUF | I2C_INT_EV);    // disa
  89:Src/i2c_it.c  ****                 }
  90:Src/i2c_it.c  ****             }
  91:Src/i2c_it.c  **** 
  92:Src/i2c_it.c  ****         }
  93:Src/i2c_it.c  **** 
  94:Src/i2c_it.c  ****     } else if (i2c_ReadWriteCmd == READ) {          // check for READ command
  95:Src/i2c_it.c  **** 
  96:Src/i2c_it.c  ****         // ======================================== READ ========================================
  97:Src/i2c_it.c  ****         // --------------------------------------------------------------------------------------
  98:Src/i2c_it.c  ****         // | Master | S | AD+W |     | RA |     | S | AD+R |            | ACK |      | NACK | P |
  99:Src/i2c_it.c  ****         // | Slave  |   |      | ACK |    | ACK |   |      | ACK | DATA |     | DATA |      |   |
 100:Src/i2c_it.c  ****         // --------------------------------------------------------------------------------------
 101:Src/i2c_it.c  ****         //           <---------- Phase 1 ----------> <---------------- Phase 2 ---------------->
 102:Src/i2c_it.c  **** 
 103:Src/i2c_it.c  ****         // Phase 1 - send the Register Address
 104:Src/i2c_it.c  ****         if (i2c_nRABytes >= 0) {
 105:Src/i2c_it.c  **** 
 106:Src/i2c_it.c  ****             if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_SBSEND)) {                        // chec
 107:Src/i2c_it.c  **** 
 108:Src/i2c_it.c  ****                 i2c_master_addressing(I2C0, i2c_slaveAddress, I2C_TRANSMITTER);             // send
  58              		.loc 1 108 17 is_stmt 1 view .LVU11
  59 0014 6FF00102 		mvn	r2, #1
  60 0018 604B     		ldr	r3, .L42+8
  61 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  62              	.L40:
 109:Src/i2c_it.c  **** 
ARM GAS  /tmp/ccso4YHK.s 			page 4


 110:Src/i2c_it.c  ****             } else if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_ADDSEND)) {                // chec
 111:Src/i2c_it.c  **** 
 112:Src/i2c_it.c  ****                 i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_ADDSEND);                       // clea
 113:Src/i2c_it.c  **** 
 114:Src/i2c_it.c  ****             } else if (i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_TBE)) {                    // chec
 115:Src/i2c_it.c  ****                 if (i2c_nRABytes > 0) {                                                     // chec
 116:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, i2c_regAddress);                                // the 
 117:Src/i2c_it.c  ****                 }	else {
 118:Src/i2c_it.c  ****                     i2c_start_on_bus(I2C0);                                                 // send
 119:Src/i2c_it.c  ****                 }
 120:Src/i2c_it.c  ****                 i2c_nRABytes--;
 121:Src/i2c_it.c  ****             }
 122:Src/i2c_it.c  **** 
 123:Src/i2c_it.c  ****         // Phase 2 - read Data
 124:Src/i2c_it.c  ****         } else {
 125:Src/i2c_it.c  **** 
 126:Src/i2c_it.c  ****             if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_SBSEND)){                          // chec
 127:Src/i2c_it.c  **** 
 128:Src/i2c_it.c  ****                 i2c_master_addressing(I2C0, i2c_slaveAddress, I2C_RECEIVER);                // send
  63              		.loc 1 128 17 is_stmt 0 view .LVU12
  64 001c 5E48     		ldr	r0, .L42+4
 129:Src/i2c_it.c  **** 
 130:Src/i2c_it.c  ****             }else if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_ADDSEND)){                   // chec
 131:Src/i2c_it.c  **** 
 132:Src/i2c_it.c  ****                 if((1 == i2c_nDABytes) || (2 == i2c_nDABytes)){
 133:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 134:Src/i2c_it.c  ****                     i2c_interrupt_flag_clear(I2C0,I2C_INT_FLAG_ADDSEND);                    // clea
 135:Src/i2c_it.c  ****                 }else{
 136:Src/i2c_it.c  ****                     i2c_interrupt_flag_clear(I2C0,I2C_INT_FLAG_ADDSEND);                    // clea
 137:Src/i2c_it.c  ****                 }
 138:Src/i2c_it.c  **** 
 139:Src/i2c_it.c  ****             }else if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_RBNE)){                      // chec
 140:Src/i2c_it.c  ****                 if(i2c_nDABytes > 0){
 141:Src/i2c_it.c  ****                         if(3 == i2c_nDABytes){
 142:Src/i2c_it.c  ****                             while(!i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_BTC));         // wait
 143:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 144:Src/i2c_it.c  ****                         }
 145:Src/i2c_it.c  ****                         *i2c_rxbuffer++ = i2c_data_receive(I2C0);                           // read
 146:Src/i2c_it.c  ****                         i2c_nDABytes--;
 147:Src/i2c_it.c  ****                         if(0 == i2c_nDABytes) {
 148:Src/i2c_it.c  ****                             i2c_stop_on_bus(I2C0);                                          // send
 149:Src/i2c_it.c  ****                             i2c_status = 0;                                                 // 0 = 
 150:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_ENABLE);
 151:Src/i2c_it.c  ****                             i2c_ackpos_config(I2C0, I2C_ACKPOS_CURRENT);
 152:Src/i2c_it.c  ****                             i2c_interrupt_disable(I2C0, I2C_INT_ERR | I2C_INT_BUF | I2C_INT_EV);
 153:Src/i2c_it.c  ****                         }
 154:Src/i2c_it.c  ****                 }
 155:Src/i2c_it.c  ****                 
 156:Src/i2c_it.c  ****             }
 157:Src/i2c_it.c  **** 
 158:Src/i2c_it.c  ****         }
 159:Src/i2c_it.c  ****     }
 160:Src/i2c_it.c  **** 
 161:Src/i2c_it.c  **** }
  65              		.loc 1 161 1 view .LVU13
  66 001e BDE83840 		pop	{r3, r4, r5, lr}
  67              	.LCFI1:
ARM GAS  /tmp/ccso4YHK.s 			page 5


  68              		.cfi_remember_state
  69              		.cfi_restore 14
  70              		.cfi_restore 5
  71              		.cfi_restore 4
  72              		.cfi_restore 3
  73              		.cfi_def_cfa_offset 0
 128:Src/i2c_it.c  **** 
  74              		.loc 1 128 17 view .LVU14
  75 0022 FFF7FEBF 		b	i2c_master_addressing
  76              	.LVL1:
  77              	.L3:
  78              	.LCFI2:
  79              		.cfi_restore_state
  63:Src/i2c_it.c  **** 
  80              		.loc 1 63 16 is_stmt 1 view .LVU15
  63:Src/i2c_it.c  **** 
  81              		.loc 1 63 20 is_stmt 0 view .LVU16
  82 0026 0221     		movs	r1, #2
  83 0028 5B48     		ldr	r0, .L42+4
  84 002a FFF7FEFF 		bl	i2c_interrupt_flag_get
  85              	.LVL2:
  63:Src/i2c_it.c  **** 
  86              		.loc 1 63 19 view .LVU17
  87 002e 28B1     		cbz	r0, .L4
  88              	.L38:
 134:Src/i2c_it.c  ****                 }else{
  89              		.loc 1 134 21 is_stmt 1 view .LVU18
  90              		.loc 1 161 1 is_stmt 0 view .LVU19
  91 0030 BDE83840 		pop	{r3, r4, r5, lr}
  92              	.LCFI3:
  93              		.cfi_remember_state
  94              		.cfi_restore 14
  95              		.cfi_restore 5
  96              		.cfi_restore 4
  97              		.cfi_restore 3
  98              		.cfi_def_cfa_offset 0
 134:Src/i2c_it.c  ****                 }else{
  99              		.loc 1 134 21 view .LVU20
 100 0034 0221     		movs	r1, #2
 101 0036 5848     		ldr	r0, .L42+4
 102 0038 FFF7FEBF 		b	i2c_interrupt_flag_clear
 103              	.LVL3:
 104              	.L4:
 105              	.LCFI4:
 106              		.cfi_restore_state
  67:Src/i2c_it.c  **** 
 107              		.loc 1 67 16 is_stmt 1 view .LVU21
  67:Src/i2c_it.c  **** 
 108              		.loc 1 67 20 is_stmt 0 view .LVU22
 109 003c 8021     		movs	r1, #128
 110 003e 5648     		ldr	r0, .L42+4
 111 0040 FFF7FEFF 		bl	i2c_interrupt_flag_get
 112              	.LVL4:
  67:Src/i2c_it.c  **** 
 113              		.loc 1 67 19 view .LVU23
 114 0044 0028     		cmp	r0, #0
 115 0046 2AD0     		beq	.L1
ARM GAS  /tmp/ccso4YHK.s 			page 6


  69:Src/i2c_it.c  ****                 i2c_data_transmit(I2C0, i2c_regAddress);                                    // the 
 116              		.loc 1 69 13 is_stmt 1 view .LVU24
  69:Src/i2c_it.c  ****                 i2c_data_transmit(I2C0, i2c_regAddress);                                    // the 
 117              		.loc 1 69 30 is_stmt 0 view .LVU25
 118 0048 554C     		ldr	r4, .L42+12
 119 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 120 004c 5BB2     		sxtb	r3, r3
  69:Src/i2c_it.c  ****                 i2c_data_transmit(I2C0, i2c_regAddress);                                    // the 
 121              		.loc 1 69 16 view .LVU26
 122 004e 002B     		cmp	r3, #0
 123 0050 09DD     		ble	.L7
 124              	.L41:
 116:Src/i2c_it.c  ****                 }	else {
 125              		.loc 1 116 21 is_stmt 1 view .LVU27
 126 0052 544B     		ldr	r3, .L42+16
 127 0054 5048     		ldr	r0, .L42+4
 128 0056 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 129 0058 FFF7FEFF 		bl	i2c_data_transmit
 130              	.LVL5:
 131              	.L16:
 120:Src/i2c_it.c  ****             }
 132              		.loc 1 120 17 view .LVU28
 120:Src/i2c_it.c  ****             }
 133              		.loc 1 120 29 is_stmt 0 view .LVU29
 134 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 135 005e 013B     		subs	r3, r3, #1
 136 0060 5BB2     		sxtb	r3, r3
 137 0062 2370     		strb	r3, [r4]
 138 0064 1BE0     		b	.L1
 139              	.L7:
  73:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, *i2c_txbuffer++);                               // the 
 140              		.loc 1 73 17 is_stmt 1 view .LVU30
  73:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, *i2c_txbuffer++);                               // the 
 141              		.loc 1 73 34 is_stmt 0 view .LVU31
 142 0066 504C     		ldr	r4, .L42+20
 143 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  73:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, *i2c_txbuffer++);                               // the 
 144              		.loc 1 73 20 view .LVU32
 145 006a CBB1     		cbz	r3, .L8
  74:Src/i2c_it.c  ****                     i2c_nDABytes--;
 146              		.loc 1 74 21 is_stmt 1 view .LVU33
  74:Src/i2c_it.c  ****                     i2c_nDABytes--;
 147              		.loc 1 74 58 is_stmt 0 view .LVU34
 148 006c 4F4A     		ldr	r2, .L42+24
  74:Src/i2c_it.c  ****                     i2c_nDABytes--;
 149              		.loc 1 74 21 view .LVU35
 150 006e 4A48     		ldr	r0, .L42+4
  74:Src/i2c_it.c  ****                     i2c_nDABytes--;
 151              		.loc 1 74 58 view .LVU36
 152 0070 1368     		ldr	r3, [r2]
 153 0072 591C     		adds	r1, r3, #1
 154 0074 1160     		str	r1, [r2]
  74:Src/i2c_it.c  ****                     i2c_nDABytes--;
 155              		.loc 1 74 21 view .LVU37
 156 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 157 0078 FFF7FEFF 		bl	i2c_data_transmit
 158              	.LVL6:
ARM GAS  /tmp/ccso4YHK.s 			page 7


  75:Src/i2c_it.c  ****                     if (0 == i2c_nDABytes) {
 159              		.loc 1 75 21 is_stmt 1 view .LVU38
  75:Src/i2c_it.c  ****                     if (0 == i2c_nDABytes) {
 160              		.loc 1 75 33 is_stmt 0 view .LVU39
 161 007c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 162 007e 013B     		subs	r3, r3, #1
 163 0080 DBB2     		uxtb	r3, r3
 164 0082 2370     		strb	r3, [r4]
  76:Src/i2c_it.c  ****                         i2c_status = 0;                                                     // 0 = 
 165              		.loc 1 76 21 is_stmt 1 view .LVU40
  76:Src/i2c_it.c  ****                         i2c_status = 0;                                                     // 0 = 
 166              		.loc 1 76 27 is_stmt 0 view .LVU41
 167 0084 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76:Src/i2c_it.c  ****                         i2c_status = 0;                                                     // 0 = 
 168              		.loc 1 76 24 view .LVU42
 169 0086 03F0FF02 		and	r2, r3, #255
 170 008a 0BB9     		cbnz	r3, .L9
  77:Src/i2c_it.c  ****                     }
 171              		.loc 1 77 25 is_stmt 1 view .LVU43
  77:Src/i2c_it.c  ****                     }
 172              		.loc 1 77 36 is_stmt 0 view .LVU44
 173 008c 484B     		ldr	r3, .L42+28
 174 008e 1A70     		strb	r2, [r3]
 175              	.L9:
  49:Src/i2c_it.c  ****     uint16_t k;
 176              		.loc 1 49 1 discriminator 3 view .LVU45
 177 0090 4FF4FA73 		mov	r3, #500
 178              	.L10:
 179              	.LVL7:
  81:Src/i2c_it.c  ****                         #else
 180              		.loc 1 81 29 is_stmt 1 discriminator 3 view .LVU46
 181              		.syntax unified
 182              	@ 81 "Src/i2c_it.c" 1
 183 0094 00BF     		nop
 184              	@ 0 "" 2
  79:Src/i2c_it.c  ****                         #ifdef __GNUC__
 185              		.loc 1 79 37 discriminator 3 view .LVU47
 186              	.LVL8:
  79:Src/i2c_it.c  ****                         #ifdef __GNUC__
 187              		.loc 1 79 30 discriminator 3 view .LVU48
  79:Src/i2c_it.c  ****                         #ifdef __GNUC__
 188              		.loc 1 79 21 is_stmt 0 discriminator 3 view .LVU49
 189              		.thumb
 190              		.syntax unified
 191 0096 013B     		subs	r3, r3, #1
 192              	.LVL9:
  79:Src/i2c_it.c  ****                         #ifdef __GNUC__
 193              		.loc 1 79 21 discriminator 3 view .LVU50
 194 0098 9BB2     		uxth	r3, r3
 195 009a 002B     		cmp	r3, #0
 196 009c FAD1     		bne	.L10
 197              	.L1:
 198              		.loc 1 161 1 view .LVU51
 199 009e 38BD     		pop	{r3, r4, r5, pc}
 200              	.L8:
  87:Src/i2c_it.c  ****                     i2c_interrupt_disable(I2C0, I2C_INT_ERR | I2C_INT_BUF | I2C_INT_EV);    // disa
 201              		.loc 1 87 21 is_stmt 1 view .LVU52
ARM GAS  /tmp/ccso4YHK.s 			page 8


 202 00a0 3D48     		ldr	r0, .L42+4
 203 00a2 FFF7FEFF 		bl	i2c_stop_on_bus
 204              	.LVL10:
  88:Src/i2c_it.c  ****                 }
 205              		.loc 1 88 21 view .LVU53
 206              	.L39:
 152:Src/i2c_it.c  ****                         }
 207              		.loc 1 152 29 view .LVU54
 208              		.loc 1 161 1 is_stmt 0 view .LVU55
 209 00a6 BDE83840 		pop	{r3, r4, r5, lr}
 210              	.LCFI5:
 211              		.cfi_remember_state
 212              		.cfi_restore 14
 213              		.cfi_restore 5
 214              		.cfi_restore 4
 215              		.cfi_restore 3
 216              		.cfi_def_cfa_offset 0
 152:Src/i2c_it.c  ****                         }
 217              		.loc 1 152 29 view .LVU56
 218 00aa 4FF4E061 		mov	r1, #1792
 219 00ae 3A48     		ldr	r0, .L42+4
 220 00b0 FFF7FEBF 		b	i2c_interrupt_disable
 221              	.LVL11:
 222              	.L2:
 223              	.LCFI6:
 224              		.cfi_restore_state
  94:Src/i2c_it.c  **** 
 225              		.loc 1 94 12 is_stmt 1 view .LVU57
  94:Src/i2c_it.c  **** 
 226              		.loc 1 94 33 is_stmt 0 view .LVU58
 227 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:Src/i2c_it.c  **** 
 228              		.loc 1 94 15 view .LVU59
 229 00b6 002B     		cmp	r3, #0
 230 00b8 F1D1     		bne	.L1
 104:Src/i2c_it.c  **** 
 231              		.loc 1 104 9 is_stmt 1 view .LVU60
 104:Src/i2c_it.c  **** 
 232              		.loc 1 104 26 is_stmt 0 view .LVU61
 233 00ba 394C     		ldr	r4, .L42+12
 106:Src/i2c_it.c  **** 
 234              		.loc 1 106 17 view .LVU62
 235 00bc 0121     		movs	r1, #1
 104:Src/i2c_it.c  **** 
 236              		.loc 1 104 26 view .LVU63
 237 00be 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106:Src/i2c_it.c  **** 
 238              		.loc 1 106 17 view .LVU64
 239 00c0 3548     		ldr	r0, .L42+4
 104:Src/i2c_it.c  **** 
 240              		.loc 1 104 12 view .LVU65
 241 00c2 1B06     		lsls	r3, r3, #24
 242 00c4 17D4     		bmi	.L12
 106:Src/i2c_it.c  **** 
 243              		.loc 1 106 13 is_stmt 1 view .LVU66
 106:Src/i2c_it.c  **** 
 244              		.loc 1 106 17 is_stmt 0 view .LVU67
ARM GAS  /tmp/ccso4YHK.s 			page 9


 245 00c6 FFF7FEFF 		bl	i2c_interrupt_flag_get
 246              	.LVL12:
 106:Src/i2c_it.c  **** 
 247              		.loc 1 106 16 view .LVU68
 248 00ca 0028     		cmp	r0, #0
 249 00cc A2D1     		bne	.L37
 110:Src/i2c_it.c  **** 
 250              		.loc 1 110 20 is_stmt 1 view .LVU69
 110:Src/i2c_it.c  **** 
 251              		.loc 1 110 24 is_stmt 0 view .LVU70
 252 00ce 0221     		movs	r1, #2
 253 00d0 3148     		ldr	r0, .L42+4
 254 00d2 FFF7FEFF 		bl	i2c_interrupt_flag_get
 255              	.LVL13:
 110:Src/i2c_it.c  **** 
 256              		.loc 1 110 23 view .LVU71
 257 00d6 0028     		cmp	r0, #0
 258 00d8 AAD1     		bne	.L38
 114:Src/i2c_it.c  ****                 if (i2c_nRABytes > 0) {                                                     // chec
 259              		.loc 1 114 20 is_stmt 1 view .LVU72
 114:Src/i2c_it.c  ****                 if (i2c_nRABytes > 0) {                                                     // chec
 260              		.loc 1 114 24 is_stmt 0 view .LVU73
 261 00da 8021     		movs	r1, #128
 262 00dc 2E48     		ldr	r0, .L42+4
 263 00de FFF7FEFF 		bl	i2c_interrupt_flag_get
 264              	.LVL14:
 114:Src/i2c_it.c  ****                 if (i2c_nRABytes > 0) {                                                     // chec
 265              		.loc 1 114 23 view .LVU74
 266 00e2 0028     		cmp	r0, #0
 267 00e4 DBD0     		beq	.L1
 115:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, i2c_regAddress);                                // the 
 268              		.loc 1 115 17 is_stmt 1 view .LVU75
 115:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, i2c_regAddress);                                // the 
 269              		.loc 1 115 34 is_stmt 0 view .LVU76
 270 00e6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 271 00e8 5BB2     		sxtb	r3, r3
 115:Src/i2c_it.c  ****                     i2c_data_transmit(I2C0, i2c_regAddress);                                // the 
 272              		.loc 1 115 20 view .LVU77
 273 00ea 002B     		cmp	r3, #0
 274 00ec B1DC     		bgt	.L41
 118:Src/i2c_it.c  ****                 }
 275              		.loc 1 118 21 is_stmt 1 view .LVU78
 276 00ee 2A48     		ldr	r0, .L42+4
 277 00f0 FFF7FEFF 		bl	i2c_start_on_bus
 278              	.LVL15:
 279 00f4 B2E7     		b	.L16
 280              	.L12:
 126:Src/i2c_it.c  **** 
 281              		.loc 1 126 13 view .LVU79
 126:Src/i2c_it.c  **** 
 282              		.loc 1 126 16 is_stmt 0 view .LVU80
 283 00f6 FFF7FEFF 		bl	i2c_interrupt_flag_get
 284              	.LVL16:
 126:Src/i2c_it.c  **** 
 285              		.loc 1 126 15 view .LVU81
 286 00fa 18B1     		cbz	r0, .L17
 128:Src/i2c_it.c  **** 
ARM GAS  /tmp/ccso4YHK.s 			page 10


 287              		.loc 1 128 17 is_stmt 1 view .LVU82
 288 00fc 274B     		ldr	r3, .L42+8
 289 00fe 0122     		movs	r2, #1
 290 0100 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 291 0102 8BE7     		b	.L40
 292              	.L17:
 130:Src/i2c_it.c  **** 
 293              		.loc 1 130 19 view .LVU83
 130:Src/i2c_it.c  **** 
 294              		.loc 1 130 22 is_stmt 0 view .LVU84
 295 0104 0221     		movs	r1, #2
 296 0106 2448     		ldr	r0, .L42+4
 297 0108 FFF7FEFF 		bl	i2c_interrupt_flag_get
 298              	.LVL17:
 130:Src/i2c_it.c  **** 
 299              		.loc 1 130 21 view .LVU85
 300 010c 58B1     		cbz	r0, .L18
 132:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 301              		.loc 1 132 17 is_stmt 1 view .LVU86
 132:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 302              		.loc 1 132 23 is_stmt 0 view .LVU87
 303 010e 264B     		ldr	r3, .L42+20
 304 0110 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 132:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 305              		.loc 1 132 19 view .LVU88
 306 0112 012A     		cmp	r2, #1
 307 0114 02D0     		beq	.L19
 132:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 308              		.loc 1 132 46 discriminator 1 view .LVU89
 309 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Src/i2c_it.c  ****                     i2c_ack_config(I2C0, I2C_ACK_DISABLE);                                  // clea
 310              		.loc 1 132 40 discriminator 1 view .LVU90
 311 0118 022B     		cmp	r3, #2
 312 011a 89D1     		bne	.L38
 313              	.L19:
 133:Src/i2c_it.c  ****                     i2c_interrupt_flag_clear(I2C0,I2C_INT_FLAG_ADDSEND);                    // clea
 314              		.loc 1 133 21 is_stmt 1 view .LVU91
 315 011c 0021     		movs	r1, #0
 316 011e 1E48     		ldr	r0, .L42+4
 317 0120 FFF7FEFF 		bl	i2c_ack_config
 318              	.LVL18:
 319 0124 84E7     		b	.L38
 320              	.L18:
 139:Src/i2c_it.c  ****                 if(i2c_nDABytes > 0){
 321              		.loc 1 139 19 view .LVU92
 139:Src/i2c_it.c  ****                 if(i2c_nDABytes > 0){
 322              		.loc 1 139 22 is_stmt 0 view .LVU93
 323 0126 4021     		movs	r1, #64
 324 0128 1B48     		ldr	r0, .L42+4
 325 012a FFF7FEFF 		bl	i2c_interrupt_flag_get
 326              	.LVL19:
 139:Src/i2c_it.c  ****                 if(i2c_nDABytes > 0){
 327              		.loc 1 139 21 view .LVU94
 328 012e 0028     		cmp	r0, #0
 329 0130 B5D0     		beq	.L1
 140:Src/i2c_it.c  ****                         if(3 == i2c_nDABytes){
 330              		.loc 1 140 17 is_stmt 1 view .LVU95
ARM GAS  /tmp/ccso4YHK.s 			page 11


 140:Src/i2c_it.c  ****                         if(3 == i2c_nDABytes){
 331              		.loc 1 140 33 is_stmt 0 view .LVU96
 332 0132 1D4C     		ldr	r4, .L42+20
 333 0134 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 140:Src/i2c_it.c  ****                         if(3 == i2c_nDABytes){
 334              		.loc 1 140 19 view .LVU97
 335 0136 002B     		cmp	r3, #0
 336 0138 B1D0     		beq	.L1
 141:Src/i2c_it.c  ****                             while(!i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_BTC));         // wait
 337              		.loc 1 141 25 is_stmt 1 view .LVU98
 141:Src/i2c_it.c  ****                             while(!i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_BTC));         // wait
 338              		.loc 1 141 30 is_stmt 0 view .LVU99
 339 013a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 141:Src/i2c_it.c  ****                             while(!i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_BTC));         // wait
 340              		.loc 1 141 27 view .LVU100
 341 013c 032B     		cmp	r3, #3
 342 013e 0AD1     		bne	.L20
 142:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 343              		.loc 1 142 36 view .LVU101
 344 0140 154D     		ldr	r5, .L42+4
 345              	.L21:
 142:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 346              		.loc 1 142 83 is_stmt 1 discriminator 1 view .LVU102
 142:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 347              		.loc 1 142 34 discriminator 1 view .LVU103
 142:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 348              		.loc 1 142 36 is_stmt 0 discriminator 1 view .LVU104
 349 0142 0421     		movs	r1, #4
 350 0144 2846     		mov	r0, r5
 351 0146 FFF7FEFF 		bl	i2c_interrupt_flag_get
 352              	.LVL20:
 142:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_DISABLE);                          // send
 353              		.loc 1 142 34 discriminator 1 view .LVU105
 354 014a 0028     		cmp	r0, #0
 355 014c F9D0     		beq	.L21
 143:Src/i2c_it.c  ****                         }
 356              		.loc 1 143 29 is_stmt 1 view .LVU106
 357 014e 0021     		movs	r1, #0
 358 0150 1148     		ldr	r0, .L42+4
 359 0152 FFF7FEFF 		bl	i2c_ack_config
 360              	.LVL21:
 361              	.L20:
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 362              		.loc 1 145 25 view .LVU107
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 363              		.loc 1 145 38 is_stmt 0 view .LVU108
 364 0156 174B     		ldr	r3, .L42+32
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 365              		.loc 1 145 43 view .LVU109
 366 0158 0F48     		ldr	r0, .L42+4
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 367              		.loc 1 145 38 view .LVU110
 368 015a 1D68     		ldr	r5, [r3]
 369 015c 6A1C     		adds	r2, r5, #1
 370 015e 1A60     		str	r2, [r3]
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 371              		.loc 1 145 43 view .LVU111
ARM GAS  /tmp/ccso4YHK.s 			page 12


 372 0160 FFF7FEFF 		bl	i2c_data_receive
 373              	.LVL22:
 145:Src/i2c_it.c  ****                         i2c_nDABytes--;
 374              		.loc 1 145 41 view .LVU112
 375 0164 2870     		strb	r0, [r5]
 146:Src/i2c_it.c  ****                         if(0 == i2c_nDABytes) {
 376              		.loc 1 146 25 is_stmt 1 view .LVU113
 146:Src/i2c_it.c  ****                         if(0 == i2c_nDABytes) {
 377              		.loc 1 146 37 is_stmt 0 view .LVU114
 378 0166 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 379 0168 013B     		subs	r3, r3, #1
 380 016a DBB2     		uxtb	r3, r3
 381 016c 2370     		strb	r3, [r4]
 147:Src/i2c_it.c  ****                             i2c_stop_on_bus(I2C0);                                          // send
 382              		.loc 1 147 25 is_stmt 1 view .LVU115
 147:Src/i2c_it.c  ****                             i2c_stop_on_bus(I2C0);                                          // send
 383              		.loc 1 147 30 is_stmt 0 view .LVU116
 384 016e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 147:Src/i2c_it.c  ****                             i2c_stop_on_bus(I2C0);                                          // send
 385              		.loc 1 147 27 view .LVU117
 386 0170 03F0FF04 		and	r4, r3, #255
 387 0174 002B     		cmp	r3, #0
 388 0176 92D1     		bne	.L1
 148:Src/i2c_it.c  ****                             i2c_status = 0;                                                 // 0 = 
 389              		.loc 1 148 29 is_stmt 1 view .LVU118
 390 0178 0748     		ldr	r0, .L42+4
 391 017a FFF7FEFF 		bl	i2c_stop_on_bus
 392              	.LVL23:
 149:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_ENABLE);
 393              		.loc 1 149 29 view .LVU119
 149:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_ENABLE);
 394              		.loc 1 149 40 is_stmt 0 view .LVU120
 395 017e 0C4B     		ldr	r3, .L42+28
 150:Src/i2c_it.c  ****                             i2c_ackpos_config(I2C0, I2C_ACKPOS_CURRENT);
 396              		.loc 1 150 29 view .LVU121
 397 0180 0121     		movs	r1, #1
 398 0182 0548     		ldr	r0, .L42+4
 149:Src/i2c_it.c  ****                             i2c_ack_config(I2C0, I2C_ACK_ENABLE);
 399              		.loc 1 149 40 view .LVU122
 400 0184 1C70     		strb	r4, [r3]
 150:Src/i2c_it.c  ****                             i2c_ackpos_config(I2C0, I2C_ACKPOS_CURRENT);
 401              		.loc 1 150 29 is_stmt 1 view .LVU123
 402 0186 FFF7FEFF 		bl	i2c_ack_config
 403              	.LVL24:
 151:Src/i2c_it.c  ****                             i2c_interrupt_disable(I2C0, I2C_INT_ERR | I2C_INT_BUF | I2C_INT_EV);
 404              		.loc 1 151 29 view .LVU124
 405 018a 0121     		movs	r1, #1
 406 018c 0248     		ldr	r0, .L42+4
 407 018e FFF7FEFF 		bl	i2c_ackpos_config
 408              	.LVL25:
 409 0192 88E7     		b	.L39
 410              	.L43:
 411              		.align	2
 412              	.L42:
 413 0194 00000000 		.word	i2c_ReadWriteCmd
 414 0198 00540040 		.word	1073763328
 415 019c 00000000 		.word	i2c_slaveAddress
ARM GAS  /tmp/ccso4YHK.s 			page 13


 416 01a0 00000000 		.word	i2c_nRABytes
 417 01a4 00000000 		.word	i2c_regAddress
 418 01a8 00000000 		.word	i2c_nDABytes
 419 01ac 00000000 		.word	i2c_txbuffer
 420 01b0 00000000 		.word	i2c_status
 421 01b4 00000000 		.word	i2c_rxbuffer
 422              		.cfi_endproc
 423              	.LFE56:
 425              		.section	.text.I2C0_ErrorIRQ_Handler,"ax",%progbits
 426              		.align	1
 427              		.global	I2C0_ErrorIRQ_Handler
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	I2C0_ErrorIRQ_Handler:
 434              	.LFB57:
 162:Src/i2c_it.c  **** 
 163:Src/i2c_it.c  **** 
 164:Src/i2c_it.c  **** 
 165:Src/i2c_it.c  **** void I2C0_ErrorIRQ_Handler(void)
 166:Src/i2c_it.c  **** {
 435              		.loc 1 166 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 167:Src/i2c_it.c  ****     /* no acknowledge received */
 168:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_AERR)){
 439              		.loc 1 168 5 view .LVU126
 166:Src/i2c_it.c  ****     /* no acknowledge received */
 440              		.loc 1 166 1 is_stmt 0 view .LVU127
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI7:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 446              		.loc 1 168 8 view .LVU128
 447 0002 4FF48061 		mov	r1, #1024
 448 0006 2948     		ldr	r0, .L73
 449 0008 FFF7FEFF 		bl	i2c_interrupt_flag_get
 450              	.LVL26:
 451              		.loc 1 168 7 view .LVU129
 452 000c 20B1     		cbz	r0, .L45
 169:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_AERR);
 453              		.loc 1 169 9 is_stmt 1 view .LVU130
 454 000e 4FF48061 		mov	r1, #1024
 455 0012 2648     		ldr	r0, .L73
 456 0014 FFF7FEFF 		bl	i2c_interrupt_flag_clear
 457              	.LVL27:
 458              	.L45:
 170:Src/i2c_it.c  ****     }
 171:Src/i2c_it.c  **** 
 172:Src/i2c_it.c  ****     /* SMBus alert */
 173:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_SMBALT)){
 459              		.loc 1 173 5 view .LVU131
 460              		.loc 1 173 8 is_stmt 0 view .LVU132
 461 0018 4FF40041 		mov	r1, #32768
ARM GAS  /tmp/ccso4YHK.s 			page 14


 462 001c 2348     		ldr	r0, .L73
 463 001e FFF7FEFF 		bl	i2c_interrupt_flag_get
 464              	.LVL28:
 465              		.loc 1 173 7 view .LVU133
 466 0022 20B1     		cbz	r0, .L46
 174:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_SMBALT);
 467              		.loc 1 174 9 is_stmt 1 view .LVU134
 468 0024 4FF40041 		mov	r1, #32768
 469 0028 2048     		ldr	r0, .L73
 470 002a FFF7FEFF 		bl	i2c_interrupt_flag_clear
 471              	.LVL29:
 472              	.L46:
 175:Src/i2c_it.c  ****     }
 176:Src/i2c_it.c  **** 
 177:Src/i2c_it.c  ****     /* bus timeout in SMBus mode */
 178:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_SMBTO)){
 473              		.loc 1 178 5 view .LVU135
 474              		.loc 1 178 8 is_stmt 0 view .LVU136
 475 002e 4FF48041 		mov	r1, #16384
 476 0032 1E48     		ldr	r0, .L73
 477 0034 FFF7FEFF 		bl	i2c_interrupt_flag_get
 478              	.LVL30:
 479              		.loc 1 178 7 view .LVU137
 480 0038 20B1     		cbz	r0, .L47
 179:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_SMBTO);
 481              		.loc 1 179 9 is_stmt 1 view .LVU138
 482 003a 4FF48041 		mov	r1, #16384
 483 003e 1B48     		ldr	r0, .L73
 484 0040 FFF7FEFF 		bl	i2c_interrupt_flag_clear
 485              	.LVL31:
 486              	.L47:
 180:Src/i2c_it.c  ****     }
 181:Src/i2c_it.c  **** 
 182:Src/i2c_it.c  ****     /* over-run or under-run when SCL stretch is disabled */
 183:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_OUERR)){
 487              		.loc 1 183 5 view .LVU139
 488              		.loc 1 183 8 is_stmt 0 view .LVU140
 489 0044 4FF40061 		mov	r1, #2048
 490 0048 1848     		ldr	r0, .L73
 491 004a FFF7FEFF 		bl	i2c_interrupt_flag_get
 492              	.LVL32:
 493              		.loc 1 183 7 view .LVU141
 494 004e 20B1     		cbz	r0, .L48
 184:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_OUERR);
 495              		.loc 1 184 9 is_stmt 1 view .LVU142
 496 0050 4FF40061 		mov	r1, #2048
 497 0054 1548     		ldr	r0, .L73
 498 0056 FFF7FEFF 		bl	i2c_interrupt_flag_clear
 499              	.LVL33:
 500              	.L48:
 185:Src/i2c_it.c  ****     }
 186:Src/i2c_it.c  **** 
 187:Src/i2c_it.c  ****     /* arbitration lost */
 188:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_LOSTARB)){
 501              		.loc 1 188 5 view .LVU143
 502              		.loc 1 188 8 is_stmt 0 view .LVU144
 503 005a 4FF40071 		mov	r1, #512
ARM GAS  /tmp/ccso4YHK.s 			page 15


 504 005e 1348     		ldr	r0, .L73
 505 0060 FFF7FEFF 		bl	i2c_interrupt_flag_get
 506              	.LVL34:
 507              		.loc 1 188 7 view .LVU145
 508 0064 20B1     		cbz	r0, .L49
 189:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_LOSTARB);
 509              		.loc 1 189 9 is_stmt 1 view .LVU146
 510 0066 4FF40071 		mov	r1, #512
 511 006a 1048     		ldr	r0, .L73
 512 006c FFF7FEFF 		bl	i2c_interrupt_flag_clear
 513              	.LVL35:
 514              	.L49:
 190:Src/i2c_it.c  ****     }
 191:Src/i2c_it.c  **** 
 192:Src/i2c_it.c  ****     /* bus error */
 193:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_BERR)){
 515              		.loc 1 193 5 view .LVU147
 516              		.loc 1 193 8 is_stmt 0 view .LVU148
 517 0070 4FF48071 		mov	r1, #256
 518 0074 0D48     		ldr	r0, .L73
 519 0076 FFF7FEFF 		bl	i2c_interrupt_flag_get
 520              	.LVL36:
 521              		.loc 1 193 7 view .LVU149
 522 007a 20B1     		cbz	r0, .L50
 194:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_BERR);
 523              		.loc 1 194 9 is_stmt 1 view .LVU150
 524 007c 4FF48071 		mov	r1, #256
 525 0080 0A48     		ldr	r0, .L73
 526 0082 FFF7FEFF 		bl	i2c_interrupt_flag_clear
 527              	.LVL37:
 528              	.L50:
 195:Src/i2c_it.c  ****     }
 196:Src/i2c_it.c  **** 
 197:Src/i2c_it.c  ****     /* CRC value doesn't match */
 198:Src/i2c_it.c  ****     if(i2c_interrupt_flag_get(I2C0, I2C_INT_FLAG_PECERR)){
 529              		.loc 1 198 5 view .LVU151
 530              		.loc 1 198 8 is_stmt 0 view .LVU152
 531 0086 4FF48051 		mov	r1, #4096
 532 008a 0848     		ldr	r0, .L73
 533 008c FFF7FEFF 		bl	i2c_interrupt_flag_get
 534              	.LVL38:
 535              		.loc 1 198 7 view .LVU153
 536 0090 20B1     		cbz	r0, .L51
 199:Src/i2c_it.c  ****         i2c_interrupt_flag_clear(I2C0, I2C_INT_FLAG_PECERR);
 537              		.loc 1 199 9 is_stmt 1 view .LVU154
 538 0092 4FF48051 		mov	r1, #4096
 539 0096 0548     		ldr	r0, .L73
 540 0098 FFF7FEFF 		bl	i2c_interrupt_flag_clear
 541              	.LVL39:
 542              	.L51:
 200:Src/i2c_it.c  ****     }
 201:Src/i2c_it.c  **** 
 202:Src/i2c_it.c  ****     /* disable the error interrupt */
 203:Src/i2c_it.c  ****     i2c_interrupt_disable(I2C0,I2C_INT_ERR | I2C_INT_BUF | I2C_INT_EV);
 543              		.loc 1 203 5 view .LVU155
 204:Src/i2c_it.c  **** }
 544              		.loc 1 204 1 is_stmt 0 view .LVU156
ARM GAS  /tmp/ccso4YHK.s 			page 16


 545 009c BDE80840 		pop	{r3, lr}
 546              	.LCFI8:
 547              		.cfi_restore 14
 548              		.cfi_restore 3
 549              		.cfi_def_cfa_offset 0
 203:Src/i2c_it.c  **** }
 550              		.loc 1 203 5 view .LVU157
 551 00a0 4FF4E061 		mov	r1, #1792
 552 00a4 0148     		ldr	r0, .L73
 553 00a6 FFF7FEBF 		b	i2c_interrupt_disable
 554              	.LVL40:
 555              	.L74:
 556 00aa 00BF     		.align	2
 557              	.L73:
 558 00ac 00540040 		.word	1073763328
 559              		.cfi_endproc
 560              	.LFE57:
 562              		.text
 563              	.Letext0:
 564              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 565              		.file 3 "Inc/defines.h"
 566              		.file 4 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_i2c.h"
ARM GAS  /tmp/ccso4YHK.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c_it.c
     /tmp/ccso4YHK.s:16     .text.I2C0_EventIRQ_Handler:0000000000000000 $t
     /tmp/ccso4YHK.s:24     .text.I2C0_EventIRQ_Handler:0000000000000000 I2C0_EventIRQ_Handler
     /tmp/ccso4YHK.s:413    .text.I2C0_EventIRQ_Handler:0000000000000194 $d
     /tmp/ccso4YHK.s:426    .text.I2C0_ErrorIRQ_Handler:0000000000000000 $t
     /tmp/ccso4YHK.s:433    .text.I2C0_ErrorIRQ_Handler:0000000000000000 I2C0_ErrorIRQ_Handler
     /tmp/ccso4YHK.s:558    .text.I2C0_ErrorIRQ_Handler:00000000000000ac $d

UNDEFINED SYMBOLS
i2c_interrupt_flag_get
i2c_master_addressing
i2c_interrupt_flag_clear
i2c_data_transmit
i2c_stop_on_bus
i2c_interrupt_disable
i2c_start_on_bus
i2c_ack_config
i2c_data_receive
i2c_ackpos_config
i2c_ReadWriteCmd
i2c_slaveAddress
i2c_nRABytes
i2c_regAddress
i2c_nDABytes
i2c_txbuffer
i2c_status
i2c_rxbuffer
