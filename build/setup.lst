ARM GAS  /tmp/ccZZDWEE.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"setup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.gpio_config,"ax",%progbits
  16              		.align	1
  17              		.global	gpio_config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	gpio_config:
  25              	.LFB56:
  26              		.file 1 "Src/setup.c"
   1:Src/setup.c   **** /**
   2:Src/setup.c   ****   * This file is part of the hoverboard-sideboard-hack project.
   3:Src/setup.c   ****   *
   4:Src/setup.c   ****   * Copyright (C) 2020-2021 Emanuel FERU <aerdronix@gmail.com>
   5:Src/setup.c   ****   *
   6:Src/setup.c   ****   * This program is free software: you can redistribute it and/or modify
   7:Src/setup.c   ****   * it under the terms of the GNU General Public License as published by
   8:Src/setup.c   ****   * the Free Software Foundation, either version 3 of the License, or
   9:Src/setup.c   ****   * (at your option) any later version.
  10:Src/setup.c   ****   *
  11:Src/setup.c   ****   * This program is distributed in the hope that it will be useful,
  12:Src/setup.c   ****   * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:Src/setup.c   ****   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:Src/setup.c   ****   * GNU General Public License for more details.
  15:Src/setup.c   ****   *
  16:Src/setup.c   ****   * You should have received a copy of the GNU General Public License
  17:Src/setup.c   ****   * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:Src/setup.c   **** */
  19:Src/setup.c   **** 
  20:Src/setup.c   **** // Includes
  21:Src/setup.c   **** #include "gd32f1x0.h"
  22:Src/setup.c   **** #include "systick.h"
  23:Src/setup.c   **** #include "setup.h"
  24:Src/setup.c   **** #include "defines.h"
  25:Src/setup.c   **** #include "config.h"
  26:Src/setup.c   **** #include "util.h"
  27:Src/setup.c   **** 
  28:Src/setup.c   **** // Global variables
  29:Src/setup.c   **** 
  30:Src/setup.c   **** 
  31:Src/setup.c   **** // Private variables
  32:Src/setup.c   **** static rcu_periph_enum USART_CLK[USARTn]        = { USART0_CLK,
ARM GAS  /tmp/ccZZDWEE.s 			page 2


  33:Src/setup.c   ****                                                     USART1_CLK
  34:Src/setup.c   ****                                                   };
  35:Src/setup.c   **** 
  36:Src/setup.c   **** static uint32_t USART_TX_PIN[USARTn]            = { USART0_TX_PIN,
  37:Src/setup.c   ****                                                     USART1_TX_PIN
  38:Src/setup.c   ****                                                   };
  39:Src/setup.c   **** 
  40:Src/setup.c   **** static uint32_t USART_RX_PIN[USARTn]            = { USART0_RX_PIN,
  41:Src/setup.c   ****                                                     USART1_RX_PIN
  42:Src/setup.c   ****                                                   };
  43:Src/setup.c   **** 
  44:Src/setup.c   **** static dma_channel_enum USART_TX_DMA_CH[USARTn] = { USART0_TX_DMA_CH,
  45:Src/setup.c   ****                                                     USART1_TX_DMA_CH
  46:Src/setup.c   ****                                                   };
  47:Src/setup.c   **** 
  48:Src/setup.c   **** static dma_channel_enum USART_RX_DMA_CH[USARTn] = { USART0_RX_DMA_CH,
  49:Src/setup.c   ****                                                     USART1_RX_DMA_CH
  50:Src/setup.c   ****                                                   };
  51:Src/setup.c   **** 
  52:Src/setup.c   **** static uint32_t USART_TDATA_ADDRESS[USARTn]     = { USART0_TDATA_ADDRESS,
  53:Src/setup.c   ****                                                     USART1_TDATA_ADDRESS
  54:Src/setup.c   ****                                                   };
  55:Src/setup.c   **** 
  56:Src/setup.c   **** static uint32_t USART_RDATA_ADDRESS[USARTn]     = { USART0_RDATA_ADDRESS,
  57:Src/setup.c   ****                                                     USART1_RDATA_ADDRESS
  58:Src/setup.c   ****                                                   };
  59:Src/setup.c   **** 
  60:Src/setup.c   **** 
  61:Src/setup.c   **** void gpio_config(void) {
  27              		.loc 1 61 24 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  62:Src/setup.c   **** 
  63:Src/setup.c   ****     /* =========================== Configure LEDs GPIOs =========================== */
  64:Src/setup.c   ****     /* enable the GPIO clock */
  65:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOA);
  31              		.loc 1 65 5 view .LVU1
  61:Src/setup.c   **** 
  32              		.loc 1 61 24 is_stmt 0 view .LVU2
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 65 5 view .LVU3
  41 0002 40F21150 		movw	r0, #1297
  42 0006 FFF7FEFF 		bl	rcu_periph_clock_enable
  43              	.LVL0:
  66:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOB);
  44              		.loc 1 66 5 is_stmt 1 view .LVU4
  45 000a 40F21250 		movw	r0, #1298
  46 000e FFF7FEFF 		bl	rcu_periph_clock_enable
  47              	.LVL1:
  67:Src/setup.c   **** 
ARM GAS  /tmp/ccZZDWEE.s 			page 3


  68:Src/setup.c   ****     /* configure GPIO port */ 
  69:Src/setup.c   ****     gpio_mode_set(LED1_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED1_Pin);
  48              		.loc 1 69 5 view .LVU5
  49 0012 0123     		movs	r3, #1
  70:Src/setup.c   ****     gpio_mode_set(LED2_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED2_Pin);
  50              		.loc 1 70 5 is_stmt 0 view .LVU6
  51 0014 6A4C     		ldr	r4, .L2
  69:Src/setup.c   ****     gpio_mode_set(LED2_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED2_Pin);
  52              		.loc 1 69 5 view .LVU7
  53 0016 1946     		mov	r1, r3
  54 0018 0022     		movs	r2, #0
  55 001a 4FF09040 		mov	r0, #1207959552
  56 001e FFF7FEFF 		bl	gpio_mode_set
  57              	.LVL2:
  58              		.loc 1 70 5 is_stmt 1 view .LVU8
  59 0022 2046     		mov	r0, r4
  60 0024 4FF40073 		mov	r3, #512
  61 0028 0022     		movs	r2, #0
  62 002a 0121     		movs	r1, #1
  63 002c FFF7FEFF 		bl	gpio_mode_set
  64              	.LVL3:
  71:Src/setup.c   ****     gpio_mode_set(LED3_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED3_Pin);
  65              		.loc 1 71 5 view .LVU9
  66 0030 2046     		mov	r0, r4
  67 0032 4FF48073 		mov	r3, #256
  68 0036 0022     		movs	r2, #0
  69 0038 0121     		movs	r1, #1
  70 003a FFF7FEFF 		bl	gpio_mode_set
  71              	.LVL4:
  72:Src/setup.c   ****     gpio_mode_set(LED4_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED4_Pin);
  72              		.loc 1 72 5 view .LVU10
  73 003e 2046     		mov	r0, r4
  74 0040 2023     		movs	r3, #32
  75 0042 0022     		movs	r2, #0
  76 0044 0121     		movs	r1, #1
  77 0046 FFF7FEFF 		bl	gpio_mode_set
  78              	.LVL5:
  73:Src/setup.c   ****     gpio_mode_set(LED5_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED5_Pin);
  79              		.loc 1 73 5 view .LVU11
  80 004a 2046     		mov	r0, r4
  81 004c 1023     		movs	r3, #16
  82 004e 0022     		movs	r2, #0
  83 0050 0121     		movs	r1, #1
  84 0052 FFF7FEFF 		bl	gpio_mode_set
  85              	.LVL6:
  74:Src/setup.c   ****     gpio_output_options_set(LED1_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, LED1_Pin);
  86              		.loc 1 74 5 view .LVU12
  87 0056 0123     		movs	r3, #1
  88 0058 0322     		movs	r2, #3
  89 005a 0021     		movs	r1, #0
  90 005c 4FF09040 		mov	r0, #1207959552
  91 0060 FFF7FEFF 		bl	gpio_output_options_set
  92              	.LVL7:
  75:Src/setup.c   ****     gpio_output_options_set(LED2_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, LED2_Pin);
  93              		.loc 1 75 5 view .LVU13
  94 0064 2046     		mov	r0, r4
  95 0066 4FF40073 		mov	r3, #512
ARM GAS  /tmp/ccZZDWEE.s 			page 4


  96 006a 0322     		movs	r2, #3
  97 006c 0021     		movs	r1, #0
  98 006e FFF7FEFF 		bl	gpio_output_options_set
  99              	.LVL8:
  76:Src/setup.c   ****     gpio_output_options_set(LED3_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, LED3_Pin);
 100              		.loc 1 76 5 view .LVU14
 101 0072 2046     		mov	r0, r4
 102 0074 4FF48073 		mov	r3, #256
 103 0078 0322     		movs	r2, #3
 104 007a 0021     		movs	r1, #0
 105 007c FFF7FEFF 		bl	gpio_output_options_set
 106              	.LVL9:
  77:Src/setup.c   ****     gpio_output_options_set(LED4_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, LED4_Pin);
 107              		.loc 1 77 5 view .LVU15
 108 0080 2046     		mov	r0, r4
 109 0082 2023     		movs	r3, #32
 110 0084 0322     		movs	r2, #3
 111 0086 0021     		movs	r1, #0
 112 0088 FFF7FEFF 		bl	gpio_output_options_set
 113              	.LVL10:
  78:Src/setup.c   ****     gpio_output_options_set(LED5_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, LED5_Pin);
 114              		.loc 1 78 5 view .LVU16
 115 008c 1023     		movs	r3, #16
 116 008e 0322     		movs	r2, #3
 117 0090 2046     		mov	r0, r4
 118 0092 0021     		movs	r1, #0
 119 0094 FFF7FEFF 		bl	gpio_output_options_set
 120              	.LVL11:
  79:Src/setup.c   **** 
  80:Src/setup.c   ****     /* reset GPIO pin */
  81:Src/setup.c   ****     gpio_bit_reset(LED1_GPIO_Port, LED1_Pin);
 121              		.loc 1 81 5 view .LVU17
 122 0098 0121     		movs	r1, #1
 123 009a 4FF09040 		mov	r0, #1207959552
 124 009e FFF7FEFF 		bl	gpio_bit_reset
 125              	.LVL12:
  82:Src/setup.c   ****     gpio_bit_reset(LED2_GPIO_Port, LED2_Pin);
 126              		.loc 1 82 5 view .LVU18
 127 00a2 2046     		mov	r0, r4
 128 00a4 4FF40071 		mov	r1, #512
 129 00a8 FFF7FEFF 		bl	gpio_bit_reset
 130              	.LVL13:
  83:Src/setup.c   ****     gpio_bit_reset(LED3_GPIO_Port, LED3_Pin);
 131              		.loc 1 83 5 view .LVU19
 132 00ac 2046     		mov	r0, r4
 133 00ae 4FF48071 		mov	r1, #256
 134 00b2 FFF7FEFF 		bl	gpio_bit_reset
 135              	.LVL14:
  84:Src/setup.c   ****     gpio_bit_reset(LED4_GPIO_Port, LED4_Pin);
 136              		.loc 1 84 5 view .LVU20
 137 00b6 2046     		mov	r0, r4
 138 00b8 2021     		movs	r1, #32
 139 00ba FFF7FEFF 		bl	gpio_bit_reset
 140              	.LVL15:
  85:Src/setup.c   ****     gpio_bit_reset(LED5_GPIO_Port, LED5_Pin);
 141              		.loc 1 85 5 view .LVU21
 142 00be 1021     		movs	r1, #16
ARM GAS  /tmp/ccZZDWEE.s 			page 5


 143 00c0 2046     		mov	r0, r4
 144 00c2 FFF7FEFF 		bl	gpio_bit_reset
 145              	.LVL16:
  86:Src/setup.c   **** 
  87:Src/setup.c   **** 
  88:Src/setup.c   ****     /* =========================== Configure Sensors GPIOs =========================== */
  89:Src/setup.c   ****     /* enable the GPIO clock */
  90:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOA);
 146              		.loc 1 90 5 view .LVU22
 147 00c6 40F21150 		movw	r0, #1297
 148 00ca FFF7FEFF 		bl	rcu_periph_clock_enable
 149              	.LVL17:
  91:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOC);
 150              		.loc 1 91 5 view .LVU23
 151 00ce 40F21350 		movw	r0, #1299
 152 00d2 FFF7FEFF 		bl	rcu_periph_clock_enable
 153              	.LVL18:
  92:Src/setup.c   **** 
  93:Src/setup.c   ****     /* configure GPIO port */
  94:Src/setup.c   ****     gpio_mode_set(SENSOR1_GPIO_Port, GPIO_MODE_INPUT, GPIO_PUPD_NONE, SENSOR1_Pin);
 154              		.loc 1 94 5 view .LVU24
 155 00d6 0022     		movs	r2, #0
 156 00d8 1023     		movs	r3, #16
 157 00da 1146     		mov	r1, r2
 158 00dc 4FF09040 		mov	r0, #1207959552
 159 00e0 FFF7FEFF 		bl	gpio_mode_set
 160              	.LVL19:
  95:Src/setup.c   ****     gpio_mode_set(SENSOR2_GPIO_Port, GPIO_MODE_INPUT, GPIO_PUPD_NONE, SENSOR2_Pin);
 161              		.loc 1 95 5 view .LVU25
 162 00e4 0022     		movs	r2, #0
 163 00e6 374D     		ldr	r5, .L2+4
 164 00e8 4FF48043 		mov	r3, #16384
 165 00ec 1146     		mov	r1, r2
 166 00ee 2846     		mov	r0, r5
 167 00f0 FFF7FEFF 		bl	gpio_mode_set
 168              	.LVL20:
  96:Src/setup.c   **** 
  97:Src/setup.c   **** 
  98:Src/setup.c   ****     /* =========================== Configure I2C GPIOs =========================== */
  99:Src/setup.c   ****     /* enable I2C clock */
 100:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOB);
 169              		.loc 1 100 5 view .LVU26
 170 00f4 40F21250 		movw	r0, #1298
 171 00f8 FFF7FEFF 		bl	rcu_periph_clock_enable
 172              	.LVL21:
 101:Src/setup.c   ****       rcu_periph_clock_enable(MPU_RCU_I2C);
 173              		.loc 1 101 7 view .LVU27
 174 00fc 40F21570 		movw	r0, #1813
 175 0100 FFF7FEFF 		bl	rcu_periph_clock_enable
 176              	.LVL22:
 102:Src/setup.c   **** 
 103:Src/setup.c   ****     /* connect PB6 to I2C_SCL and PB7 to I2C_SDA */
 104:Src/setup.c   ****     gpio_af_set(MPU_SCL_GPIO_Port, GPIO_AF_1, MPU_SCL_Pin);
 177              		.loc 1 104 5 view .LVU28
 178 0104 2046     		mov	r0, r4
 179 0106 4022     		movs	r2, #64
 180 0108 0121     		movs	r1, #1
ARM GAS  /tmp/ccZZDWEE.s 			page 6


 181 010a FFF7FEFF 		bl	gpio_af_set
 182              	.LVL23:
 105:Src/setup.c   ****     gpio_af_set(MPU_SDA_GPIO_Port, GPIO_AF_1, MPU_SDA_Pin);
 183              		.loc 1 105 5 view .LVU29
 184 010e 2046     		mov	r0, r4
 185 0110 8022     		movs	r2, #128
 186 0112 0121     		movs	r1, #1
 187 0114 FFF7FEFF 		bl	gpio_af_set
 188              	.LVL24:
 106:Src/setup.c   **** 
 107:Src/setup.c   ****     /* configure GPIO port */
 108:Src/setup.c   ****     gpio_mode_set(MPU_SCL_GPIO_Port, GPIO_MODE_AF, GPIO_PUPD_PULLUP, MPU_SCL_Pin);
 189              		.loc 1 108 5 view .LVU30
 190 0118 2046     		mov	r0, r4
 191 011a 4023     		movs	r3, #64
 192 011c 0122     		movs	r2, #1
 193 011e 0221     		movs	r1, #2
 194 0120 FFF7FEFF 		bl	gpio_mode_set
 195              	.LVL25:
 109:Src/setup.c   ****     gpio_output_options_set(MPU_SCL_GPIO_Port, GPIO_OTYPE_OD, GPIO_OSPEED_50MHZ, MPU_SCL_Pin);	
 196              		.loc 1 109 5 view .LVU31
 197 0124 2046     		mov	r0, r4
 198 0126 4023     		movs	r3, #64
 199 0128 0322     		movs	r2, #3
 200 012a 0121     		movs	r1, #1
 201 012c FFF7FEFF 		bl	gpio_output_options_set
 202              	.LVL26:
 110:Src/setup.c   ****     gpio_mode_set(MPU_SDA_GPIO_Port, GPIO_MODE_AF, GPIO_PUPD_PULLUP, MPU_SDA_Pin);
 203              		.loc 1 110 5 view .LVU32
 204 0130 2046     		mov	r0, r4
 205 0132 8023     		movs	r3, #128
 206 0134 0122     		movs	r2, #1
 207 0136 0221     		movs	r1, #2
 208 0138 FFF7FEFF 		bl	gpio_mode_set
 209              	.LVL27:
 111:Src/setup.c   ****     gpio_output_options_set(MPU_SDA_GPIO_Port, GPIO_OTYPE_OD, GPIO_OSPEED_50MHZ, MPU_SDA_Pin);
 210              		.loc 1 111 5 view .LVU33
 211 013c 8023     		movs	r3, #128
 212 013e 0322     		movs	r2, #3
 213 0140 0121     		movs	r1, #1
 214 0142 2046     		mov	r0, r4
 215 0144 FFF7FEFF 		bl	gpio_output_options_set
 216              	.LVL28:
 112:Src/setup.c   **** 
 113:Src/setup.c   ****     #ifdef AUX45_USE_I2C
 114:Src/setup.c   ****         /* enable I2C clock */
 115:Src/setup.c   ****         rcu_periph_clock_enable(RCU_GPIOA);
 116:Src/setup.c   ****         rcu_periph_clock_enable(AUX_RCU_I2C);
 117:Src/setup.c   **** 
 118:Src/setup.c   ****         /* connect PB6 to I2C_SCL and PB7 to I2C_SDA */
 119:Src/setup.c   ****         gpio_af_set(AUX_SCL_GPIO_Port, GPIO_AF_1, AUX_SCL_Pin);
 120:Src/setup.c   ****         gpio_af_set(AUX_SDA_GPIO_Port, GPIO_AF_1, AUX_SDA_Pin);
 121:Src/setup.c   ****         
 122:Src/setup.c   ****         /* configure GPIO port */
 123:Src/setup.c   ****         gpio_mode_set(AUX_SCL_GPIO_Port, GPIO_MODE_AF, GPIO_PUPD_PULLUP, AUX_SCL_Pin);
 124:Src/setup.c   ****         gpio_output_options_set(AUX_SCL_GPIO_Port, GPIO_OTYPE_OD, GPIO_OSPEED_50MHZ, AUX_SCL_Pin);	
 125:Src/setup.c   ****         gpio_mode_set(AUX_SDA_GPIO_Port, GPIO_MODE_AF, GPIO_PUPD_PULLUP, AUX_SDA_Pin);
ARM GAS  /tmp/ccZZDWEE.s 			page 7


 126:Src/setup.c   ****         gpio_output_options_set(AUX_SDA_GPIO_Port, GPIO_OTYPE_OD, GPIO_OSPEED_50MHZ, AUX_SDA_Pin);	
 127:Src/setup.c   ****     #endif
 128:Src/setup.c   **** 
 129:Src/setup.c   **** 
 130:Src/setup.c   ****     /* =========================== Configure AUX GPIOs =========================== */
 131:Src/setup.c   ****     /* configure AUX GPIO port */
 132:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOA);
 217              		.loc 1 132 5 view .LVU34
 218 0148 40F21150 		movw	r0, #1297
 219 014c FFF7FEFF 		bl	rcu_periph_clock_enable
 220              	.LVL29:
 133:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOB);
 221              		.loc 1 133 5 view .LVU35
 222 0150 40F21250 		movw	r0, #1298
 223 0154 FFF7FEFF 		bl	rcu_periph_clock_enable
 224              	.LVL30:
 134:Src/setup.c   ****     rcu_periph_clock_enable(RCU_GPIOC);
 225              		.loc 1 134 5 view .LVU36
 226 0158 40F21350 		movw	r0, #1299
 227 015c FFF7FEFF 		bl	rcu_periph_clock_enable
 228              	.LVL31:
 135:Src/setup.c   **** 
 136:Src/setup.c   ****     /* configure GPIO port - inputs */
 137:Src/setup.c   ****     gpio_mode_set(AUX1_PU_GPIO_Port, GPIO_MODE_INPUT, GPIO_PUPD_NONE, AUX1_PU_Pin);
 229              		.loc 1 137 5 view .LVU37
 230 0160 0022     		movs	r2, #0
 231 0162 2846     		mov	r0, r5
 232 0164 1146     		mov	r1, r2
 233 0166 4FF40043 		mov	r3, #32768
 234 016a FFF7FEFF 		bl	gpio_mode_set
 235              	.LVL32:
 138:Src/setup.c   **** 
 139:Src/setup.c   ****     /* configure GPIO port - outputs */
 140:Src/setup.c   ****     gpio_mode_set(AUX2_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, AUX2_Pin);
 236              		.loc 1 140 5 view .LVU38
 237 016e 0223     		movs	r3, #2
 238 0170 0022     		movs	r2, #0
 239 0172 0121     		movs	r1, #1
 240 0174 4FF09040 		mov	r0, #1207959552
 241 0178 FFF7FEFF 		bl	gpio_mode_set
 242              	.LVL33:
 141:Src/setup.c   ****     gpio_mode_set(AUX3_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, AUX3_Pin);
 243              		.loc 1 141 5 view .LVU39
 244 017c 2046     		mov	r0, r4
 245 017e 4FF48063 		mov	r3, #1024
 246 0182 0022     		movs	r2, #0
 247 0184 0121     		movs	r1, #1
 248 0186 FFF7FEFF 		bl	gpio_mode_set
 249              	.LVL34:
 142:Src/setup.c   ****     gpio_output_options_set(AUX2_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, AUX2_Pin);
 250              		.loc 1 142 5 view .LVU40
 251 018a 0223     		movs	r3, #2
 252 018c 0322     		movs	r2, #3
 253 018e 0021     		movs	r1, #0
 254 0190 4FF09040 		mov	r0, #1207959552
 255 0194 FFF7FEFF 		bl	gpio_output_options_set
 256              	.LVL35:
ARM GAS  /tmp/ccZZDWEE.s 			page 8


 143:Src/setup.c   ****     gpio_output_options_set(AUX3_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, AUX3_Pin);
 257              		.loc 1 143 5 view .LVU41
 258 0198 4FF48063 		mov	r3, #1024
 259 019c 2046     		mov	r0, r4
 260 019e 0322     		movs	r2, #3
 261 01a0 0021     		movs	r1, #0
 262 01a2 FFF7FEFF 		bl	gpio_output_options_set
 263              	.LVL36:
 144:Src/setup.c   **** 
 145:Src/setup.c   ****     /* reset GPIO pin */
 146:Src/setup.c   ****     gpio_bit_reset(AUX2_GPIO_Port, AUX2_Pin);
 264              		.loc 1 146 5 view .LVU42
 265 01a6 0221     		movs	r1, #2
 266 01a8 4FF09040 		mov	r0, #1207959552
 267 01ac FFF7FEFF 		bl	gpio_bit_reset
 268              	.LVL37:
 147:Src/setup.c   ****     gpio_bit_reset(AUX3_GPIO_Port, AUX3_Pin);
 269              		.loc 1 147 5 view .LVU43
 270 01b0 2046     		mov	r0, r4
 148:Src/setup.c   **** 
 149:Src/setup.c   ****     #ifdef AUX45_USE_GPIO
 150:Src/setup.c   ****         /* configure GPIO port - outputs */
 151:Src/setup.c   ****         gpio_mode_set(AUX4_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, AUX4_Pin);
 152:Src/setup.c   ****         gpio_mode_set(AUX5_GPIO_Port, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, AUX5_Pin);		
 153:Src/setup.c   ****         gpio_output_options_set(AUX4_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, AUX4_Pin);
 154:Src/setup.c   ****         gpio_output_options_set(AUX5_GPIO_Port, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, AUX5_Pin);
 155:Src/setup.c   ****         
 156:Src/setup.c   ****             /* reset GPIO pin */
 157:Src/setup.c   ****         gpio_bit_reset(AUX4_GPIO_Port, AUX4_Pin);
 158:Src/setup.c   ****         gpio_bit_reset(AUX5_GPIO_Port, AUX5_Pin);
 159:Src/setup.c   ****     #endif
 160:Src/setup.c   **** 
 161:Src/setup.c   **** }
 271              		.loc 1 161 1 is_stmt 0 view .LVU44
 272 01b2 BDE83840 		pop	{r3, r4, r5, lr}
 273              	.LCFI1:
 274              		.cfi_restore 14
 275              		.cfi_restore 5
 276              		.cfi_restore 4
 277              		.cfi_restore 3
 278              		.cfi_def_cfa_offset 0
 147:Src/setup.c   ****     gpio_bit_reset(AUX3_GPIO_Port, AUX3_Pin);
 279              		.loc 1 147 5 view .LVU45
 280 01b6 4FF48061 		mov	r1, #1024
 281 01ba FFF7FEBF 		b	gpio_bit_reset
 282              	.LVL38:
 283              	.L3:
 284 01be 00BF     		.align	2
 285              	.L2:
 286 01c0 00040048 		.word	1207960576
 287 01c4 00080048 		.word	1207961600
 288              		.cfi_endproc
 289              	.LFE56:
 291              		.section	.text.usart_config,"ax",%progbits
 292              		.align	1
 293              		.global	usart_config
 294              		.syntax unified
ARM GAS  /tmp/ccZZDWEE.s 			page 9


 295              		.thumb
 296              		.thumb_func
 297              		.fpu softvfp
 299              	usart_config:
 300              	.LVL39:
 301              	.LFB57:
 162:Src/setup.c   **** 
 163:Src/setup.c   **** 
 164:Src/setup.c   **** void usart_config(uint32_t selUSART, uint32_t selBaudRate) {
 302              		.loc 1 164 60 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Src/setup.c   **** 
 166:Src/setup.c   ****     uint8_t USART_ID = 0U;
 306              		.loc 1 166 5 view .LVU47
 167:Src/setup.c   ****     if(selUSART == USART0){
 307              		.loc 1 167 5 view .LVU48
 168:Src/setup.c   ****         USART_ID = 0U;
 169:Src/setup.c   ****     }
 170:Src/setup.c   ****     if(selUSART == USART1){
 308              		.loc 1 170 5 view .LVU49
 164:Src/setup.c   **** 
 309              		.loc 1 164 60 is_stmt 0 view .LVU50
 310 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 311              	.LCFI2:
 312              		.cfi_def_cfa_offset 24
 313              		.cfi_offset 3, -24
 314              		.cfi_offset 4, -20
 315              		.cfi_offset 5, -16
 316              		.cfi_offset 6, -12
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 164:Src/setup.c   **** 
 319              		.loc 1 164 60 view .LVU51
 320 0002 0446     		mov	r4, r0
 321              	.LVL40:
 171:Src/setup.c   ****         USART_ID = 1U;
 172:Src/setup.c   ****     }
 173:Src/setup.c   **** 
 174:Src/setup.c   ****     /* enable GPIO clock */
 175:Src/setup.c   ****     rcu_periph_clock_enable(USART_GPIO_CLK);
 322              		.loc 1 175 5 is_stmt 1 view .LVU52
 164:Src/setup.c   **** 
 323              		.loc 1 164 60 is_stmt 0 view .LVU53
 324 0004 0E46     		mov	r6, r1
 170:Src/setup.c   ****         USART_ID = 1U;
 325              		.loc 1 170 7 view .LVU54
 326 0006 2D4D     		ldr	r5, .L5
 327              		.loc 1 175 5 view .LVU55
 328 0008 40F21150 		movw	r0, #1297
 329              	.LVL41:
 330              		.loc 1 175 5 view .LVU56
 331 000c FFF7FEFF 		bl	rcu_periph_clock_enable
 332              	.LVL42:
 176:Src/setup.c   **** 
 177:Src/setup.c   ****     /* enable USART clock */
ARM GAS  /tmp/ccZZDWEE.s 			page 10


 178:Src/setup.c   ****     rcu_periph_clock_enable(USART_CLK[USART_ID]);
 333              		.loc 1 178 5 is_stmt 1 view .LVU57
 170:Src/setup.c   ****         USART_ID = 1U;
 334              		.loc 1 170 7 is_stmt 0 view .LVU58
 335 0010 631B     		subs	r3, r4, r5
 336 0012 5D42     		rsbs	r5, r3, #0
 337 0014 5D41     		adcs	r5, r5, r3
 338              		.loc 1 178 5 view .LVU59
 339 0016 2A4B     		ldr	r3, .L5+4
 340 0018 33F81500 		ldrh	r0, [r3, r5, lsl #1]
 341 001c FFF7FEFF 		bl	rcu_periph_clock_enable
 342              	.LVL43:
 179:Src/setup.c   **** 
 180:Src/setup.c   ****     /* connect port to USARTx_Tx */
 181:Src/setup.c   ****     gpio_af_set(USART_GPIO_PORT, USART_AF, USART_TX_PIN[USART_ID]);
 343              		.loc 1 181 5 is_stmt 1 view .LVU60
 344 0020 284B     		ldr	r3, .L5+8
 345 0022 0121     		movs	r1, #1
 346 0024 53F82570 		ldr	r7, [r3, r5, lsl #2]
 347 0028 4FF09040 		mov	r0, #1207959552
 348 002c 3A46     		mov	r2, r7
 349 002e FFF7FEFF 		bl	gpio_af_set
 350              	.LVL44:
 182:Src/setup.c   **** 
 183:Src/setup.c   ****     /* connect port to USARTx_Rx */
 184:Src/setup.c   ****     gpio_af_set(USART_GPIO_PORT, USART_AF, USART_RX_PIN[USART_ID]);
 351              		.loc 1 184 5 view .LVU61
 352 0032 254B     		ldr	r3, .L5+12
 353 0034 0121     		movs	r1, #1
 354 0036 53F82550 		ldr	r5, [r3, r5, lsl #2]
 355 003a 4FF09040 		mov	r0, #1207959552
 356 003e 2A46     		mov	r2, r5
 357 0040 FFF7FEFF 		bl	gpio_af_set
 358              	.LVL45:
 185:Src/setup.c   **** 
 186:Src/setup.c   ****     /* configure USART Tx as alternate function push-pull */
 187:Src/setup.c   ****     gpio_mode_set(USART_GPIO_PORT, GPIO_MODE_AF, GPIO_PUPD_PULLUP, USART_TX_PIN[USART_ID]);
 359              		.loc 1 187 5 view .LVU62
 360 0044 3B46     		mov	r3, r7
 361 0046 0122     		movs	r2, #1
 362 0048 0221     		movs	r1, #2
 363 004a 4FF09040 		mov	r0, #1207959552
 364 004e FFF7FEFF 		bl	gpio_mode_set
 365              	.LVL46:
 188:Src/setup.c   ****     gpio_output_options_set(USART_GPIO_PORT, GPIO_OTYPE_PP, GPIO_OSPEED_10MHZ, USART_TX_PIN[USART_I
 366              		.loc 1 188 5 view .LVU63
 367 0052 3B46     		mov	r3, r7
 368 0054 0122     		movs	r2, #1
 369 0056 0021     		movs	r1, #0
 370 0058 4FF09040 		mov	r0, #1207959552
 371 005c FFF7FEFF 		bl	gpio_output_options_set
 372              	.LVL47:
 189:Src/setup.c   **** 
 190:Src/setup.c   ****     /* configure USART Rx as alternate function push-pull */
 191:Src/setup.c   ****     gpio_mode_set(USART_GPIO_PORT, GPIO_MODE_AF, GPIO_PUPD_PULLUP, USART_RX_PIN[USART_ID]);
 373              		.loc 1 191 5 view .LVU64
 374 0060 2B46     		mov	r3, r5
ARM GAS  /tmp/ccZZDWEE.s 			page 11


 375 0062 0122     		movs	r2, #1
 376 0064 0221     		movs	r1, #2
 377 0066 4FF09040 		mov	r0, #1207959552
 378 006a FFF7FEFF 		bl	gpio_mode_set
 379              	.LVL48:
 192:Src/setup.c   ****     gpio_output_options_set(USART_GPIO_PORT, GPIO_OTYPE_PP, GPIO_OSPEED_10MHZ, USART_RX_PIN[USART_I
 380              		.loc 1 192 5 view .LVU65
 381 006e 2B46     		mov	r3, r5
 382 0070 0122     		movs	r2, #1
 383 0072 0021     		movs	r1, #0
 384 0074 4FF09040 		mov	r0, #1207959552
 385 0078 FFF7FEFF 		bl	gpio_output_options_set
 386              	.LVL49:
 193:Src/setup.c   **** 
 194:Src/setup.c   ****     /* USART configure */
 195:Src/setup.c   ****     usart_deinit(selUSART);
 387              		.loc 1 195 5 view .LVU66
 388 007c 2046     		mov	r0, r4
 389 007e FFF7FEFF 		bl	usart_deinit
 390              	.LVL50:
 196:Src/setup.c   ****     usart_baudrate_set(selUSART, selBaudRate);
 391              		.loc 1 196 5 view .LVU67
 392 0082 3146     		mov	r1, r6
 393 0084 2046     		mov	r0, r4
 394 0086 FFF7FEFF 		bl	usart_baudrate_set
 395              	.LVL51:
 197:Src/setup.c   ****     usart_transmit_config(selUSART, USART_TRANSMIT_ENABLE);
 396              		.loc 1 197 5 view .LVU68
 397 008a 2046     		mov	r0, r4
 398 008c 0821     		movs	r1, #8
 399 008e FFF7FEFF 		bl	usart_transmit_config
 400              	.LVL52:
 198:Src/setup.c   ****     usart_receive_config(selUSART, USART_RECEIVE_ENABLE);
 401              		.loc 1 198 5 view .LVU69
 402 0092 2046     		mov	r0, r4
 403 0094 0421     		movs	r1, #4
 404 0096 FFF7FEFF 		bl	usart_receive_config
 405              	.LVL53:
 199:Src/setup.c   ****     usart_oversample_config(selUSART, USART_OVSMOD_16);     // oversampling: {USART_OVSMOD_8, USART
 406              		.loc 1 199 5 view .LVU70
 407 009a 2046     		mov	r0, r4
 408 009c 0021     		movs	r1, #0
 409 009e FFF7FEFF 		bl	usart_oversample_config
 410              	.LVL54:
 200:Src/setup.c   ****     usart_sample_bit_config(selUSART, USART_OSB_3BIT);      // sample bit:   {USART_OSB_1BIT, USART
 411              		.loc 1 200 5 view .LVU71
 412 00a2 0021     		movs	r1, #0
 413 00a4 2046     		mov	r0, r4
 414 00a6 FFF7FEFF 		bl	usart_sample_bit_config
 415              	.LVL55:
 201:Src/setup.c   ****     usart_enable(selUSART);
 416              		.loc 1 201 5 view .LVU72
 417 00aa 2046     		mov	r0, r4
 418 00ac FFF7FEFF 		bl	usart_enable
 419              	.LVL56:
 202:Src/setup.c   **** 
 203:Src/setup.c   ****     /* enable the USART IDLE line detection interrupt */
ARM GAS  /tmp/ccZZDWEE.s 			page 12


 204:Src/setup.c   ****     usart_interrupt_enable(selUSART, USART_INT_IDLE);
 420              		.loc 1 204 5 view .LVU73
 421 00b0 2046     		mov	r0, r4
 205:Src/setup.c   **** 
 206:Src/setup.c   **** }
 422              		.loc 1 206 1 is_stmt 0 view .LVU74
 423 00b2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 424              	.LCFI3:
 425              		.cfi_restore 14
 426              		.cfi_restore 7
 427              		.cfi_restore 6
 428              		.cfi_restore 5
 429              		.cfi_restore 4
 430              		.cfi_restore 3
 431              		.cfi_def_cfa_offset 0
 432              	.LVL57:
 204:Src/setup.c   **** 
 433              		.loc 1 204 5 view .LVU75
 434 00b6 0421     		movs	r1, #4
 435 00b8 FFF7FEBF 		b	usart_interrupt_enable
 436              	.LVL58:
 437              	.L6:
 204:Src/setup.c   **** 
 438              		.loc 1 204 5 view .LVU76
 439              		.align	2
 440              	.L5:
 441 00bc 00440040 		.word	1073759232
 442 00c0 00000000 		.word	.LANCHOR0
 443 00c4 00000000 		.word	.LANCHOR1
 444 00c8 00000000 		.word	.LANCHOR2
 445              		.cfi_endproc
 446              	.LFE57:
 448              		.section	.text.usart_Tx_DMA_config,"ax",%progbits
 449              		.align	1
 450              		.global	usart_Tx_DMA_config
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 456              	usart_Tx_DMA_config:
 457              	.LVL59:
 458              	.LFB58:
 207:Src/setup.c   **** 
 208:Src/setup.c   **** 
 209:Src/setup.c   **** // DMA_CH1 = USART0_TX
 210:Src/setup.c   **** // DMA_CH2 = USART0_RX
 211:Src/setup.c   **** // DMA_CH3 = USART1_TX
 212:Src/setup.c   **** // DMA_CH4 = USART1_RX
 213:Src/setup.c   **** 
 214:Src/setup.c   **** void usart_Tx_DMA_config(uint32_t selUSART, uint8_t *pData, uint32_t dSize) {
 459              		.loc 1 214 77 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 40
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 215:Src/setup.c   **** 
 216:Src/setup.c   ****     dma_parameter_struct dma_init_struct;
 463              		.loc 1 216 5 view .LVU78
ARM GAS  /tmp/ccZZDWEE.s 			page 13


 217:Src/setup.c   **** 
 218:Src/setup.c   ****     // --------------------------- TX Channel ---------------------------
 219:Src/setup.c   **** 
 220:Src/setup.c   ****     uint8_t USART_ID = 0U;
 464              		.loc 1 220 5 view .LVU79
 221:Src/setup.c   ****     if(selUSART == USART0){
 465              		.loc 1 221 5 view .LVU80
 222:Src/setup.c   ****         USART_ID = 0U;
 223:Src/setup.c   ****     }
 224:Src/setup.c   ****     if(selUSART == USART1){
 466              		.loc 1 224 5 view .LVU81
 214:Src/setup.c   **** 
 467              		.loc 1 214 77 is_stmt 0 view .LVU82
 468 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 469              	.LCFI4:
 470              		.cfi_def_cfa_offset 24
 471              		.cfi_offset 4, -24
 472              		.cfi_offset 5, -20
 473              		.cfi_offset 6, -16
 474              		.cfi_offset 7, -12
 475              		.cfi_offset 8, -8
 476              		.cfi_offset 14, -4
 477 0004 0746     		mov	r7, r0
 478              	.LVL60:
 225:Src/setup.c   ****         USART_ID = 1U;
 226:Src/setup.c   ****     }
 227:Src/setup.c   **** 
 228:Src/setup.c   ****     /* enable DMA clock */
 229:Src/setup.c   ****       rcu_periph_clock_enable(RCU_DMA);
 479              		.loc 1 229 7 is_stmt 1 view .LVU83
 224:Src/setup.c   ****         USART_ID = 1U;
 480              		.loc 1 224 7 is_stmt 0 view .LVU84
 481 0006 1F4C     		ldr	r4, .L8
 214:Src/setup.c   **** 
 482              		.loc 1 214 77 view .LVU85
 483 0008 90B0     		sub	sp, sp, #64
 484              	.LCFI5:
 485              		.cfi_def_cfa_offset 88
 486              		.loc 1 229 7 view .LVU86
 487 000a 4FF4A060 		mov	r0, #1280
 488              	.LVL61:
 214:Src/setup.c   **** 
 489              		.loc 1 214 77 view .LVU87
 490 000e 8846     		mov	r8, r1
 491 0010 1546     		mov	r5, r2
 492              		.loc 1 229 7 view .LVU88
 493 0012 FFF7FEFF 		bl	rcu_periph_clock_enable
 494              	.LVL62:
 230:Src/setup.c   ****     
 231:Src/setup.c   ****     /* deinitialize DMA channel2 */
 232:Src/setup.c   ****     dma_deinit(USART_TX_DMA_CH[USART_ID]);
 495              		.loc 1 232 5 is_stmt 1 view .LVU89
 224:Src/setup.c   ****         USART_ID = 1U;
 496              		.loc 1 224 7 is_stmt 0 view .LVU90
 497 0016 3B1B     		subs	r3, r7, r4
 498 0018 5C42     		rsbs	r4, r3, #0
 499 001a 5C41     		adcs	r4, r4, r3
ARM GAS  /tmp/ccZZDWEE.s 			page 14


 500              		.loc 1 232 5 view .LVU91
 501 001c 1A4B     		ldr	r3, .L8+4
 502 001e 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 503 0020 3046     		mov	r0, r6
 504 0022 FFF7FEFF 		bl	dma_deinit
 505              	.LVL63:
 233:Src/setup.c   ****     dma_init_struct.direction           = DMA_MEMORY_TO_PERIPHERAL;
 506              		.loc 1 233 5 is_stmt 1 view .LVU92
 507              		.loc 1 233 41 is_stmt 0 view .LVU93
 508 0026 0122     		movs	r2, #1
 234:Src/setup.c   ****     dma_init_struct.memory_addr         = (uint32_t)pData;
 235:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 509              		.loc 1 235 41 view .LVU94
 510 0028 0023     		movs	r3, #0
 236:Src/setup.c   ****     dma_init_struct.memory_width        = DMA_MEMORY_WIDTH_8BIT;
 237:Src/setup.c   ****     dma_init_struct.number              = dSize;
 238:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_TDATA_ADDRESS[USART_ID];
 511              		.loc 1 238 62 view .LVU95
 512 002a 1849     		ldr	r1, .L8+8
 239:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 240:Src/setup.c   ****     dma_init_struct.periph_width        = DMA_PERIPHERAL_WIDTH_8BIT;
 513              		.loc 1 240 41 view .LVU96
 514 002c CDE90832 		strd	r3, r2, [sp, #32]
 236:Src/setup.c   ****     dma_init_struct.memory_width        = DMA_MEMORY_WIDTH_8BIT;
 515              		.loc 1 236 41 view .LVU97
 516 0030 CDE90B33 		strd	r3, r3, [sp, #44]
 238:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 517              		.loc 1 238 41 view .LVU98
 518 0034 51F82410 		ldr	r1, [r1, r4, lsl #2]
 241:Src/setup.c   ****     dma_init_struct.priority            = DMA_PRIORITY_ULTRA_HIGH;          // Priorities: *_LOW, *
 519              		.loc 1 241 41 view .LVU99
 520 0038 4FF44053 		mov	r3, #12288
 242:Src/setup.c   ****     dma_init(USART_TX_DMA_CH[USART_ID], dma_init_struct);
 521              		.loc 1 242 5 view .LVU100
 522 003c 6C46     		mov	r4, sp
 237:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_TDATA_ADDRESS[USART_ID];
 523              		.loc 1 237 41 view .LVU101
 524 003e 0E95     		str	r5, [sp, #56]
 233:Src/setup.c   ****     dma_init_struct.memory_addr         = (uint32_t)pData;
 525              		.loc 1 233 41 view .LVU102
 526 0040 0D92     		str	r2, [sp, #52]
 234:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 527              		.loc 1 234 5 is_stmt 1 view .LVU103
 234:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 528              		.loc 1 234 41 is_stmt 0 view .LVU104
 529 0042 CDF82880 		str	r8, [sp, #40]
 235:Src/setup.c   ****     dma_init_struct.memory_width        = DMA_MEMORY_WIDTH_8BIT;
 530              		.loc 1 235 5 is_stmt 1 view .LVU105
 237:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_TDATA_ADDRESS[USART_ID];
 531              		.loc 1 237 5 view .LVU106
 238:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 532              		.loc 1 238 5 view .LVU107
 533              		.loc 1 242 5 is_stmt 0 view .LVU108
 534 0046 0AAD     		add	r5, sp, #40
 535              	.LVL64:
 238:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 536              		.loc 1 238 41 view .LVU109
ARM GAS  /tmp/ccZZDWEE.s 			page 15


 537 0048 0791     		str	r1, [sp, #28]
 239:Src/setup.c   ****     dma_init_struct.periph_width        = DMA_PERIPHERAL_WIDTH_8BIT;
 538              		.loc 1 239 5 is_stmt 1 view .LVU110
 241:Src/setup.c   ****     dma_init(USART_TX_DMA_CH[USART_ID], dma_init_struct);
 539              		.loc 1 241 5 view .LVU111
 241:Src/setup.c   ****     dma_init(USART_TX_DMA_CH[USART_ID], dma_init_struct);
 540              		.loc 1 241 41 is_stmt 0 view .LVU112
 541 004a 0F93     		str	r3, [sp, #60]
 542              		.loc 1 242 5 is_stmt 1 view .LVU113
 543 004c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 544 004e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 545 0050 95E80300 		ldm	r5, {r0, r1}
 546 0054 84E80300 		stm	r4, {r0, r1}
 547 0058 07AB     		add	r3, sp, #28
 548 005a 0ECB     		ldm	r3, {r1, r2, r3}
 549 005c 3046     		mov	r0, r6
 550 005e FFF7FEFF 		bl	dma_init
 551              	.LVL65:
 243:Src/setup.c   **** 
 244:Src/setup.c   ****     /* configure DMA mode */
 245:Src/setup.c   ****     dma_circulation_disable(USART_TX_DMA_CH[USART_ID]);
 552              		.loc 1 245 5 view .LVU114
 553 0062 3046     		mov	r0, r6
 554 0064 FFF7FEFF 		bl	dma_circulation_disable
 555              	.LVL66:
 246:Src/setup.c   ****     dma_memory_to_memory_disable(USART_TX_DMA_CH[USART_ID]);
 556              		.loc 1 246 5 view .LVU115
 557 0068 3046     		mov	r0, r6
 558 006a FFF7FEFF 		bl	dma_memory_to_memory_disable
 559              	.LVL67:
 247:Src/setup.c   **** 
 248:Src/setup.c   ****     /* USART DMA enable for transmission */
 249:Src/setup.c   ****     usart_dma_transmit_config(selUSART, USART_DENT_ENABLE);
 560              		.loc 1 249 5 view .LVU116
 561 006e 3846     		mov	r0, r7
 562 0070 8021     		movs	r1, #128
 563 0072 FFF7FEFF 		bl	usart_dma_transmit_config
 564              	.LVL68:
 250:Src/setup.c   **** 
 251:Src/setup.c   ****     /* enable DMA channel1 */
 252:Src/setup.c   ****     dma_channel_enable(USART_TX_DMA_CH[USART_ID]);
 565              		.loc 1 252 5 view .LVU117
 566 0076 3046     		mov	r0, r6
 253:Src/setup.c   **** 
 254:Src/setup.c   ****     /* wait DMA channel transfer complete */
 255:Src/setup.c   ****     // while (RESET == dma_flag_get(USART_TX_DMA[USART_ID], DMA_FLAG_FTF));
 256:Src/setup.c   **** 
 257:Src/setup.c   **** }
 567              		.loc 1 257 1 is_stmt 0 view .LVU118
 568 0078 10B0     		add	sp, sp, #64
 569              	.LCFI6:
 570              		.cfi_def_cfa_offset 24
 571              		@ sp needed
 572 007a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 573              	.LCFI7:
 574              		.cfi_restore 14
 575              		.cfi_restore 8
ARM GAS  /tmp/ccZZDWEE.s 			page 16


 576              		.cfi_restore 7
 577              		.cfi_restore 6
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581              	.LVL69:
 252:Src/setup.c   **** 
 582              		.loc 1 252 5 view .LVU119
 583 007e FFF7FEBF 		b	dma_channel_enable
 584              	.LVL70:
 585              	.L9:
 586 0082 00BF     		.align	2
 587              	.L8:
 588 0084 00440040 		.word	1073759232
 589 0088 00000000 		.word	.LANCHOR3
 590 008c 00000000 		.word	.LANCHOR4
 591              		.cfi_endproc
 592              	.LFE58:
 594              		.section	.text.usart_Rx_DMA_config,"ax",%progbits
 595              		.align	1
 596              		.global	usart_Rx_DMA_config
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	usart_Rx_DMA_config:
 603              	.LVL71:
 604              	.LFB59:
 258:Src/setup.c   **** 
 259:Src/setup.c   **** 
 260:Src/setup.c   **** void usart_Rx_DMA_config(uint32_t selUSART, uint8_t *pData, uint32_t dSize) {
 605              		.loc 1 260 77 is_stmt 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 40
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 261:Src/setup.c   **** 
 262:Src/setup.c   ****     dma_parameter_struct dma_init_struct;
 609              		.loc 1 262 5 view .LVU121
 263:Src/setup.c   **** 
 264:Src/setup.c   ****     // --------------------------- RX Channel ---------------------------
 265:Src/setup.c   **** 
 266:Src/setup.c   ****     uint8_t USART_ID = 0U;
 610              		.loc 1 266 5 view .LVU122
 267:Src/setup.c   ****     if(selUSART == USART0){
 611              		.loc 1 267 5 view .LVU123
 268:Src/setup.c   ****         USART_ID = 0U;
 269:Src/setup.c   ****     }
 270:Src/setup.c   ****     if(selUSART == USART1){
 612              		.loc 1 270 5 view .LVU124
 260:Src/setup.c   **** 
 613              		.loc 1 260 77 is_stmt 0 view .LVU125
 614 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 615              	.LCFI8:
 616              		.cfi_def_cfa_offset 24
 617              		.cfi_offset 4, -24
 618              		.cfi_offset 5, -20
 619              		.cfi_offset 6, -16
ARM GAS  /tmp/ccZZDWEE.s 			page 17


 620              		.cfi_offset 7, -12
 621              		.cfi_offset 8, -8
 622              		.cfi_offset 14, -4
 623 0004 0746     		mov	r7, r0
 624              	.LVL72:
 271:Src/setup.c   ****         USART_ID = 1U;
 272:Src/setup.c   ****     }
 273:Src/setup.c   **** 
 274:Src/setup.c   ****     /* enable DMA clock */
 275:Src/setup.c   ****       rcu_periph_clock_enable(RCU_DMA);
 625              		.loc 1 275 7 is_stmt 1 view .LVU126
 270:Src/setup.c   ****         USART_ID = 1U;
 626              		.loc 1 270 7 is_stmt 0 view .LVU127
 627 0006 1F4C     		ldr	r4, .L11
 260:Src/setup.c   **** 
 628              		.loc 1 260 77 view .LVU128
 629 0008 90B0     		sub	sp, sp, #64
 630              	.LCFI9:
 631              		.cfi_def_cfa_offset 88
 632              		.loc 1 275 7 view .LVU129
 633 000a 4FF4A060 		mov	r0, #1280
 634              	.LVL73:
 260:Src/setup.c   **** 
 635              		.loc 1 260 77 view .LVU130
 636 000e 8846     		mov	r8, r1
 637 0010 1546     		mov	r5, r2
 638              		.loc 1 275 7 view .LVU131
 639 0012 FFF7FEFF 		bl	rcu_periph_clock_enable
 640              	.LVL74:
 276:Src/setup.c   **** 
 277:Src/setup.c   ****     /* deinitialize DMA channel4 */
 278:Src/setup.c   ****     dma_deinit(USART_RX_DMA_CH[USART_ID]);
 641              		.loc 1 278 5 is_stmt 1 view .LVU132
 270:Src/setup.c   ****         USART_ID = 1U;
 642              		.loc 1 270 7 is_stmt 0 view .LVU133
 643 0016 3B1B     		subs	r3, r7, r4
 644 0018 5C42     		rsbs	r4, r3, #0
 645 001a 5C41     		adcs	r4, r4, r3
 646              		.loc 1 278 5 view .LVU134
 647 001c 1A4B     		ldr	r3, .L11+4
 648 001e 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 649 0020 3046     		mov	r0, r6
 650 0022 FFF7FEFF 		bl	dma_deinit
 651              	.LVL75:
 279:Src/setup.c   ****     dma_init_struct.direction           = DMA_PERIPHERAL_TO_MEMORY;
 652              		.loc 1 279 5 is_stmt 1 view .LVU135
 280:Src/setup.c   ****     dma_init_struct.memory_addr         = (uint32_t)pData;
 281:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 282:Src/setup.c   ****     dma_init_struct.memory_width        = DMA_MEMORY_WIDTH_8BIT;
 283:Src/setup.c   ****     dma_init_struct.number              = dSize;
 284:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_RDATA_ADDRESS[USART_ID];
 653              		.loc 1 284 62 is_stmt 0 view .LVU136
 654 0026 194A     		ldr	r2, .L11+8
 279:Src/setup.c   ****     dma_init_struct.direction           = DMA_PERIPHERAL_TO_MEMORY;
 655              		.loc 1 279 41 view .LVU137
 656 0028 0023     		movs	r3, #0
 657              		.loc 1 284 41 view .LVU138
ARM GAS  /tmp/ccZZDWEE.s 			page 18


 658 002a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 282:Src/setup.c   ****     dma_init_struct.number              = dSize;
 659              		.loc 1 282 41 view .LVU139
 660 002e CDE90B33 		strd	r3, r3, [sp, #44]
 661              		.loc 1 284 41 view .LVU140
 662 0032 0792     		str	r2, [sp, #28]
 285:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 663              		.loc 1 285 41 view .LVU141
 664 0034 0122     		movs	r2, #1
 279:Src/setup.c   ****     dma_init_struct.memory_addr         = (uint32_t)pData;
 665              		.loc 1 279 41 view .LVU142
 666 0036 0D93     		str	r3, [sp, #52]
 280:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 667              		.loc 1 280 5 is_stmt 1 view .LVU143
 286:Src/setup.c   ****     dma_init_struct.periph_width        = DMA_PERIPHERAL_WIDTH_8BIT;
 668              		.loc 1 286 41 is_stmt 0 view .LVU144
 669 0038 CDE90832 		strd	r3, r2, [sp, #32]
 287:Src/setup.c   ****     dma_init_struct.priority            = DMA_PRIORITY_ULTRA_HIGH;          // Priorities: *_LOW, *
 288:Src/setup.c   ****     dma_init(USART_RX_DMA_CH[USART_ID], dma_init_struct);
 670              		.loc 1 288 5 view .LVU145
 671 003c 6C46     		mov	r4, sp
 287:Src/setup.c   ****     dma_init_struct.priority            = DMA_PRIORITY_ULTRA_HIGH;          // Priorities: *_LOW, *
 672              		.loc 1 287 41 view .LVU146
 673 003e 4FF44053 		mov	r3, #12288
 283:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_RDATA_ADDRESS[USART_ID];
 674              		.loc 1 283 41 view .LVU147
 675 0042 0E95     		str	r5, [sp, #56]
 280:Src/setup.c   ****     dma_init_struct.memory_inc          = DMA_MEMORY_INCREASE_ENABLE;
 676              		.loc 1 280 41 view .LVU148
 677 0044 CDF82880 		str	r8, [sp, #40]
 281:Src/setup.c   ****     dma_init_struct.memory_width        = DMA_MEMORY_WIDTH_8BIT;
 678              		.loc 1 281 5 is_stmt 1 view .LVU149
 283:Src/setup.c   ****     dma_init_struct.periph_addr         = USART_RDATA_ADDRESS[USART_ID];
 679              		.loc 1 283 5 view .LVU150
 284:Src/setup.c   ****     dma_init_struct.periph_inc          = DMA_PERIPH_INCREASE_DISABLE;
 680              		.loc 1 284 5 view .LVU151
 285:Src/setup.c   ****     dma_init_struct.periph_width        = DMA_PERIPHERAL_WIDTH_8BIT;
 681              		.loc 1 285 5 view .LVU152
 287:Src/setup.c   ****     dma_init(USART_RX_DMA_CH[USART_ID], dma_init_struct);
 682              		.loc 1 287 5 view .LVU153
 683              		.loc 1 288 5 is_stmt 0 view .LVU154
 684 0048 0AAD     		add	r5, sp, #40
 685              	.LVL76:
 287:Src/setup.c   ****     dma_init(USART_RX_DMA_CH[USART_ID], dma_init_struct);
 686              		.loc 1 287 41 view .LVU155
 687 004a 0F93     		str	r3, [sp, #60]
 688              		.loc 1 288 5 is_stmt 1 view .LVU156
 689 004c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 690 004e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 691 0050 95E80300 		ldm	r5, {r0, r1}
 692 0054 84E80300 		stm	r4, {r0, r1}
 693 0058 07AB     		add	r3, sp, #28
 694 005a 0ECB     		ldm	r3, {r1, r2, r3}
 695 005c 3046     		mov	r0, r6
 696 005e FFF7FEFF 		bl	dma_init
 697              	.LVL77:
 289:Src/setup.c   **** 
ARM GAS  /tmp/ccZZDWEE.s 			page 19


 290:Src/setup.c   ****     /* configure DMA mode */
 291:Src/setup.c   ****     dma_circulation_enable(USART_RX_DMA_CH[USART_ID]); 	// dma_circulation_disable(USART_RX_DMA[USA
 698              		.loc 1 291 5 view .LVU157
 699 0062 3046     		mov	r0, r6
 700 0064 FFF7FEFF 		bl	dma_circulation_enable
 701              	.LVL78:
 292:Src/setup.c   ****     dma_memory_to_memory_disable(USART_RX_DMA_CH[USART_ID]);
 702              		.loc 1 292 5 view .LVU158
 703 0068 3046     		mov	r0, r6
 704 006a FFF7FEFF 		bl	dma_memory_to_memory_disable
 705              	.LVL79:
 293:Src/setup.c   **** 
 294:Src/setup.c   ****     /* USART DMA enable for reception */	
 295:Src/setup.c   ****     usart_dma_receive_config(selUSART, USART_DENR_ENABLE);
 706              		.loc 1 295 5 view .LVU159
 707 006e 3846     		mov	r0, r7
 708 0070 4021     		movs	r1, #64
 709 0072 FFF7FEFF 		bl	usart_dma_receive_config
 710              	.LVL80:
 296:Src/setup.c   **** 
 297:Src/setup.c   ****     /* enable DMA channel */
 298:Src/setup.c   ****     dma_channel_enable(USART_RX_DMA_CH[USART_ID]);
 711              		.loc 1 298 5 view .LVU160
 712 0076 3046     		mov	r0, r6
 299:Src/setup.c   **** 
 300:Src/setup.c   ****     /* wait DMA channel transfer complete */
 301:Src/setup.c   ****     // while (RESET == dma_flag_get(USART_RX_DMA[USART_ID], DMA_FLAG_FTF));	
 302:Src/setup.c   **** 
 303:Src/setup.c   **** }
 713              		.loc 1 303 1 is_stmt 0 view .LVU161
 714 0078 10B0     		add	sp, sp, #64
 715              	.LCFI10:
 716              		.cfi_def_cfa_offset 24
 717              		@ sp needed
 718 007a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 719              	.LCFI11:
 720              		.cfi_restore 14
 721              		.cfi_restore 8
 722              		.cfi_restore 7
 723              		.cfi_restore 6
 724              		.cfi_restore 5
 725              		.cfi_restore 4
 726              		.cfi_def_cfa_offset 0
 727              	.LVL81:
 298:Src/setup.c   **** 
 728              		.loc 1 298 5 view .LVU162
 729 007e FFF7FEBF 		b	dma_channel_enable
 730              	.LVL82:
 731              	.L12:
 732 0082 00BF     		.align	2
 733              	.L11:
 734 0084 00440040 		.word	1073759232
 735 0088 00000000 		.word	.LANCHOR5
 736 008c 00000000 		.word	.LANCHOR6
 737              		.cfi_endproc
 738              	.LFE59:
 740              		.section	.text.i2c_config,"ax",%progbits
ARM GAS  /tmp/ccZZDWEE.s 			page 20


 741              		.align	1
 742              		.global	i2c_config
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu softvfp
 748              	i2c_config:
 749              	.LFB60:
 304:Src/setup.c   **** 
 305:Src/setup.c   **** 
 306:Src/setup.c   **** void i2c_config(void) {
 750              		.loc 1 306 23 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 307:Src/setup.c   **** 
 308:Src/setup.c   ****     /* I2C clock configure */
 309:Src/setup.c   ****     //i2c_clock_config(MPU_I2C, MPU_I2C_SPEED, I2C_DTCY_2);             // I2C duty cycle in fast m
 310:Src/setup.c   ****     i2c_clock_config(MPU_I2C, MPU_I2C_SPEED, I2C_DTCY_16_9);            // I2C duty cycle in fast m
 754              		.loc 1 310 5 view .LVU164
 306:Src/setup.c   **** 
 755              		.loc 1 306 23 is_stmt 0 view .LVU165
 756 0000 10B5     		push	{r4, lr}
 757              	.LCFI12:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 4, -8
 760              		.cfi_offset 14, -4
 761              		.loc 1 310 5 view .LVU166
 762 0002 0B4C     		ldr	r4, .L14
 763 0004 4FF48042 		mov	r2, #16384
 764 0008 2046     		mov	r0, r4
 765 000a 0A49     		ldr	r1, .L14+4
 766 000c FFF7FEFF 		bl	i2c_clock_config
 767              	.LVL83:
 311:Src/setup.c   ****     /* I2C address configure */
 312:Src/setup.c   ****     i2c_mode_addr_config(MPU_I2C, I2C_I2CMODE_ENABLE, I2C_ADDFORMAT_7BITS, I2C_OWN_ADDRESS7);
 768              		.loc 1 312 5 is_stmt 1 view .LVU167
 769 0010 0022     		movs	r2, #0
 770 0012 2046     		mov	r0, r4
 771 0014 1146     		mov	r1, r2
 772 0016 2423     		movs	r3, #36
 773 0018 FFF7FEFF 		bl	i2c_mode_addr_config
 774              	.LVL84:
 313:Src/setup.c   ****     /* enable I2C */
 314:Src/setup.c   ****     i2c_enable(MPU_I2C);
 775              		.loc 1 314 5 view .LVU168
 776 001c 2046     		mov	r0, r4
 777 001e FFF7FEFF 		bl	i2c_enable
 778              	.LVL85:
 315:Src/setup.c   ****     /* enable acknowledge */
 316:Src/setup.c   ****     i2c_ack_config(MPU_I2C, I2C_ACK_ENABLE);
 779              		.loc 1 316 5 view .LVU169
 780 0022 2046     		mov	r0, r4
 317:Src/setup.c   ****     
 318:Src/setup.c   ****     #ifdef AUX45_USE_I2C
 319:Src/setup.c   ****         /* I2C clock configure */
 320:Src/setup.c   ****         //i2c_clock_config(AUX_I2C, AUX_I2C_SPEED, I2C_DTCY_2);         // I2C duty cycle in fast m
ARM GAS  /tmp/ccZZDWEE.s 			page 21


 321:Src/setup.c   ****         i2c_clock_config(AUX_I2C, AUX_I2C_SPEED, I2C_DTCY_16_9);        // I2C duty cycle in fast m
 322:Src/setup.c   ****         /* I2C address configure */
 323:Src/setup.c   ****         i2c_mode_addr_config(AUX_I2C, I2C_I2CMODE_ENABLE, I2C_ADDFORMAT_7BITS, AUX_I2C_OWN_ADDRESS7
 324:Src/setup.c   ****         /* enable I2C */
 325:Src/setup.c   ****         i2c_enable(AUX_I2C);
 326:Src/setup.c   ****         /* enable acknowledge */
 327:Src/setup.c   ****         i2c_ack_config(AUX_I2C, I2C_ACK_ENABLE);
 328:Src/setup.c   ****     #endif
 329:Src/setup.c   **** 
 330:Src/setup.c   **** }
 781              		.loc 1 330 1 is_stmt 0 view .LVU170
 782 0024 BDE81040 		pop	{r4, lr}
 783              	.LCFI13:
 784              		.cfi_restore 14
 785              		.cfi_restore 4
 786              		.cfi_def_cfa_offset 0
 316:Src/setup.c   ****     
 787              		.loc 1 316 5 view .LVU171
 788 0028 0121     		movs	r1, #1
 789 002a FFF7FEBF 		b	i2c_ack_config
 790              	.LVL86:
 791              	.L15:
 792 002e 00BF     		.align	2
 793              	.L14:
 794 0030 00540040 		.word	1073763328
 795 0034 801A0600 		.word	400000
 796              		.cfi_endproc
 797              	.LFE60:
 799              		.section	.text.usart_nvic_config,"ax",%progbits
 800              		.align	1
 801              		.global	usart_nvic_config
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu softvfp
 807              	usart_nvic_config:
 808              	.LFB61:
 331:Src/setup.c   **** 
 332:Src/setup.c   **** 
 333:Src/setup.c   **** void usart_nvic_config(void)
 334:Src/setup.c   **** {
 809              		.loc 1 334 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 335:Src/setup.c   ****     nvic_irq_enable(USART0_IRQn, 0, 1);     // Enable USART0 interrupt
 813              		.loc 1 335 5 view .LVU173
 334:Src/setup.c   ****     nvic_irq_enable(USART0_IRQn, 0, 1);     // Enable USART0 interrupt
 814              		.loc 1 334 1 is_stmt 0 view .LVU174
 815 0000 08B5     		push	{r3, lr}
 816              	.LCFI14:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 820              		.loc 1 335 5 view .LVU175
 821 0002 0122     		movs	r2, #1
 822 0004 0021     		movs	r1, #0
ARM GAS  /tmp/ccZZDWEE.s 			page 22


 823 0006 1B20     		movs	r0, #27
 824 0008 FFF7FEFF 		bl	nvic_irq_enable
 825              	.LVL87:
 336:Src/setup.c   ****     nvic_irq_enable(USART1_IRQn, 0, 1);     // Enable USART1 interrupt
 826              		.loc 1 336 5 is_stmt 1 view .LVU176
 337:Src/setup.c   **** }
 827              		.loc 1 337 1 is_stmt 0 view .LVU177
 828 000c BDE80840 		pop	{r3, lr}
 829              	.LCFI15:
 830              		.cfi_restore 14
 831              		.cfi_restore 3
 832              		.cfi_def_cfa_offset 0
 336:Src/setup.c   ****     nvic_irq_enable(USART1_IRQn, 0, 1);     // Enable USART1 interrupt
 833              		.loc 1 336 5 view .LVU178
 834 0010 0122     		movs	r2, #1
 835 0012 0021     		movs	r1, #0
 836 0014 1C20     		movs	r0, #28
 837 0016 FFF7FEBF 		b	nvic_irq_enable
 838              	.LVL88:
 839              		.cfi_endproc
 840              	.LFE61:
 842              		.section	.text.i2c_nvic_config,"ax",%progbits
 843              		.align	1
 844              		.global	i2c_nvic_config
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu softvfp
 850              	i2c_nvic_config:
 851              	.LFB62:
 338:Src/setup.c   **** 
 339:Src/setup.c   **** 
 340:Src/setup.c   **** void i2c_nvic_config(void)
 341:Src/setup.c   **** {
 852              		.loc 1 341 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 342:Src/setup.c   ****     /* configure the NVIC peripheral */
 343:Src/setup.c   ****     nvic_priority_group_set(NVIC_PRIGROUP_PRE1_SUB3);
 856              		.loc 1 343 5 view .LVU180
 341:Src/setup.c   ****     /* configure the NVIC peripheral */
 857              		.loc 1 341 1 is_stmt 0 view .LVU181
 858 0000 08B5     		push	{r3, lr}
 859              	.LCFI16:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 3, -8
 862              		.cfi_offset 14, -4
 863              		.loc 1 343 5 view .LVU182
 864 0002 4FF4C060 		mov	r0, #1536
 865 0006 FFF7FEFF 		bl	nvic_priority_group_set
 866              	.LVL89:
 344:Src/setup.c   **** 
 345:Src/setup.c   ****     nvic_irq_enable(I2C0_EV_IRQn, 0, 0);
 867              		.loc 1 345 5 is_stmt 1 view .LVU183
 868 000a 0022     		movs	r2, #0
 869 000c 1720     		movs	r0, #23
ARM GAS  /tmp/ccZZDWEE.s 			page 23


 870 000e 1146     		mov	r1, r2
 871 0010 FFF7FEFF 		bl	nvic_irq_enable
 872              	.LVL90:
 346:Src/setup.c   ****     nvic_irq_enable(I2C0_ER_IRQn, 0, 0);
 873              		.loc 1 346 5 view .LVU184
 347:Src/setup.c   **** 
 348:Src/setup.c   ****     #ifdef AUX45_USE_I2C
 349:Src/setup.c   ****     nvic_irq_enable(I2C1_EV_IRQn, 0, 2);
 350:Src/setup.c   ****     nvic_irq_enable(I2C1_ER_IRQn, 0, 2);
 351:Src/setup.c   ****     #endif
 352:Src/setup.c   **** }
 874              		.loc 1 352 1 is_stmt 0 view .LVU185
 875 0014 BDE80840 		pop	{r3, lr}
 876              	.LCFI17:
 877              		.cfi_restore 14
 878              		.cfi_restore 3
 879              		.cfi_def_cfa_offset 0
 346:Src/setup.c   ****     nvic_irq_enable(I2C0_ER_IRQn, 0, 0);
 880              		.loc 1 346 5 view .LVU186
 881 0018 0022     		movs	r2, #0
 882 001a 2020     		movs	r0, #32
 883 001c 1146     		mov	r1, r2
 884 001e FFF7FEBF 		b	nvic_irq_enable
 885              	.LVL91:
 886              		.cfi_endproc
 887              	.LFE62:
 889              		.section	.rodata.USART_CLK,"a"
 890              		.align	1
 891              		.set	.LANCHOR0,. + 0
 894              	USART_CLK:
 895 0000 0E06     		.short	1550
 896 0002 1107     		.short	1809
 897              		.section	.rodata.USART_RDATA_ADDRESS,"a"
 898              		.align	2
 899              		.set	.LANCHOR6,. + 0
 902              	USART_RDATA_ADDRESS:
 903 0000 24380140 		.word	1073821732
 904 0004 24440040 		.word	1073759268
 905              		.section	.rodata.USART_RX_DMA_CH,"a"
 906              		.set	.LANCHOR5,. + 0
 909              	USART_RX_DMA_CH:
 910 0000 02       		.byte	2
 911 0001 04       		.byte	4
 912              		.section	.rodata.USART_RX_PIN,"a"
 913              		.align	2
 914              		.set	.LANCHOR2,. + 0
 917              	USART_RX_PIN:
 918 0000 00040000 		.word	1024
 919 0004 08000000 		.word	8
 920              		.section	.rodata.USART_TDATA_ADDRESS,"a"
 921              		.align	2
 922              		.set	.LANCHOR4,. + 0
 925              	USART_TDATA_ADDRESS:
 926 0000 28380140 		.word	1073821736
 927 0004 28440040 		.word	1073759272
 928              		.section	.rodata.USART_TX_DMA_CH,"a"
 929              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/ccZZDWEE.s 			page 24


 932              	USART_TX_DMA_CH:
 933 0000 01       		.byte	1
 934 0001 03       		.byte	3
 935              		.section	.rodata.USART_TX_PIN,"a"
 936              		.align	2
 937              		.set	.LANCHOR1,. + 0
 940              	USART_TX_PIN:
 941 0000 00020000 		.word	512
 942 0004 04000000 		.word	4
 943              		.text
 944              	.Letext0:
 945              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 946              		.file 3 "Drivers/CMSIS/Include/gd32f1x0.h"
 947              		.file 4 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_dbg.h"
 948              		.file 5 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_dma.h"
 949              		.file 6 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_rcu.h"
 950              		.file 7 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_usart.h"
 951              		.file 8 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_misc.h"
 952              		.file 9 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_i2c.h"
 953              		.file 10 "Drivers/GD32F1x0_standard_peripheral/Include/gd32f1x0_gpio.h"
ARM GAS  /tmp/ccZZDWEE.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 setup.c
     /tmp/ccZZDWEE.s:16     .text.gpio_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:24     .text.gpio_config:0000000000000000 gpio_config
     /tmp/ccZZDWEE.s:286    .text.gpio_config:00000000000001c0 $d
     /tmp/ccZZDWEE.s:292    .text.usart_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:299    .text.usart_config:0000000000000000 usart_config
     /tmp/ccZZDWEE.s:441    .text.usart_config:00000000000000bc $d
     /tmp/ccZZDWEE.s:449    .text.usart_Tx_DMA_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:456    .text.usart_Tx_DMA_config:0000000000000000 usart_Tx_DMA_config
     /tmp/ccZZDWEE.s:588    .text.usart_Tx_DMA_config:0000000000000084 $d
     /tmp/ccZZDWEE.s:595    .text.usart_Rx_DMA_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:602    .text.usart_Rx_DMA_config:0000000000000000 usart_Rx_DMA_config
     /tmp/ccZZDWEE.s:734    .text.usart_Rx_DMA_config:0000000000000084 $d
     /tmp/ccZZDWEE.s:741    .text.i2c_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:748    .text.i2c_config:0000000000000000 i2c_config
     /tmp/ccZZDWEE.s:794    .text.i2c_config:0000000000000030 $d
     /tmp/ccZZDWEE.s:800    .text.usart_nvic_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:807    .text.usart_nvic_config:0000000000000000 usart_nvic_config
     /tmp/ccZZDWEE.s:843    .text.i2c_nvic_config:0000000000000000 $t
     /tmp/ccZZDWEE.s:850    .text.i2c_nvic_config:0000000000000000 i2c_nvic_config
     /tmp/ccZZDWEE.s:890    .rodata.USART_CLK:0000000000000000 $d
     /tmp/ccZZDWEE.s:894    .rodata.USART_CLK:0000000000000000 USART_CLK
     /tmp/ccZZDWEE.s:898    .rodata.USART_RDATA_ADDRESS:0000000000000000 $d
     /tmp/ccZZDWEE.s:902    .rodata.USART_RDATA_ADDRESS:0000000000000000 USART_RDATA_ADDRESS
     /tmp/ccZZDWEE.s:909    .rodata.USART_RX_DMA_CH:0000000000000000 USART_RX_DMA_CH
     /tmp/ccZZDWEE.s:913    .rodata.USART_RX_PIN:0000000000000000 $d
     /tmp/ccZZDWEE.s:917    .rodata.USART_RX_PIN:0000000000000000 USART_RX_PIN
     /tmp/ccZZDWEE.s:921    .rodata.USART_TDATA_ADDRESS:0000000000000000 $d
     /tmp/ccZZDWEE.s:925    .rodata.USART_TDATA_ADDRESS:0000000000000000 USART_TDATA_ADDRESS
     /tmp/ccZZDWEE.s:932    .rodata.USART_TX_DMA_CH:0000000000000000 USART_TX_DMA_CH
     /tmp/ccZZDWEE.s:936    .rodata.USART_TX_PIN:0000000000000000 $d
     /tmp/ccZZDWEE.s:940    .rodata.USART_TX_PIN:0000000000000000 USART_TX_PIN

UNDEFINED SYMBOLS
rcu_periph_clock_enable
gpio_mode_set
gpio_output_options_set
gpio_bit_reset
gpio_af_set
usart_deinit
usart_baudrate_set
usart_transmit_config
usart_receive_config
usart_oversample_config
usart_sample_bit_config
usart_enable
usart_interrupt_enable
dma_deinit
dma_init
dma_circulation_disable
dma_memory_to_memory_disable
usart_dma_transmit_config
dma_channel_enable
dma_circulation_enable
usart_dma_receive_config
i2c_clock_config
ARM GAS  /tmp/ccZZDWEE.s 			page 26


i2c_mode_addr_config
i2c_enable
i2c_ack_config
nvic_irq_enable
nvic_priority_group_set
